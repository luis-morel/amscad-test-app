{"version":3,"sources":["components/Twitter/fb.png","components/Twitter/gith.png","components/Twitter/insta.png","components/Twitter/twit.png","utils/API.js","components/CatButtons/CatButtons.js","components/NavBar/NavBar.js","components/BootstrapGrid/Wrapper.js","components/BootstrapGrid/Row.js","components/BootstrapGrid/Col.js","components/Post/Post.js","components/PostForm/PostForm.js","components/PostForm2/PostForm2.js","components/SignUpForm/SignUpForm.js","components/UserInfo/UserInfo.js","pages/AddNewBldg/AddNewBldg.js","pages/AddNewUser/AddNewUser.js","pages/Login/Login.js","pages/Feed/Feed.js","pages/Home/Home.js","App.js","pages/Profile/Profile.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","API","addNewBldg","newBldg","axios","post","addNewUser","newUser","createPost","deletePost","postId","delete","concat","getAllPosts","get","getPostsByCat","category","userId","queryUrl","getPostsByUser","getLoggedOnUser","login","user","logout","CatButtons","_ref","getPosts","react_default","a","createElement","id","className","map","key","onClick","NavBar","loggedIn","src","Logo","imageUrl","alt","name","Wrapper","children","Row","Col","size","_ref$span","span","offset","Post","image","timeStamp","comment","handleDelete","user_id","time","dateObj","Date","weekDay","getDay","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minutes","getMinutes","meridian","formatTimeStamp","onSubmit","BootstrapGrid_Row","BootstrapGrid_Col","PostForm","addPost","handleInputChange","postBody","postCategory","value","onChange","placeholder","rows","required","disabled","defaultValue","type","PostForm2","SignUpForm","handleSignUp","email","password","occupation","relationshipType","location","photoUrl","bio","htmlFor","UserInfo","AddNewBldg","state","_this","props","event","_event$target","target","setState","Object","defineProperty","handleNewBldg","preventDefault","newName","newLocation","then","alert","BootstrapGrid_Wrapper","this","React","Component","AddNewUser","title","userImageUrl","handleNewUser","newTitle","newUserImageUrl","newEmail","newPassword","Login","redirectTo","componentWillMount","handleLogin","res","setUser","data","Redirect","to","App","loading","handleLogout","_this2","_this3","BrowserRouter","components_NavBar_NavBar","Route","exact","path","render","pages_Login_Login","pages_AddNewBldg_AddNewBldg","pages_AddNewUser_AddNewUser","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"sQAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wgDCEzBC,EAAA,CAGbC,WAAY,SAACC,GAAc,OAAOC,IAAMC,KAAK,2BAA4BF,IACzEG,WAAY,SAACC,GAAc,OAAOH,IAAMC,KAAK,uBAAwBE,IACrEC,WAAY,SAACH,GAAW,OAAOD,IAAMC,KAAK,iBAAkBA,IAC5DI,WAAY,SAACC,GAAa,OAAON,IAAMO,OAAN,qBAAAC,OAAkCF,KACnEG,YAAa,WAAQ,OAAOT,IAAMU,IAAI,mBACtCC,cAAe,SAACC,EAAUC,GACxB,IAAIC,EAAW,uBAAyBF,EACxC,OAAIC,GACFC,GAAY,IAAMD,EACXb,IAAMU,IAAII,IAEPd,IAAMU,IAAII,IAGxBC,eAAgB,SAACF,GAAa,OAAOb,IAAMU,IAAI,mBAAqBG,IAGpEG,gBAAiB,WAAQ,OAAOhB,IAAMU,IAAI,kBAC1CO,MAAO,SAACC,GAAW,OAAOlB,IAAMC,KAAK,cAAeiB,IACpDC,OAAQ,WAAQ,OAAOnB,IAAMU,IAAI,kBCcpBU,SAnCI,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAqBlB,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,cAAcC,UAAU,2BAC5BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAtBF,CACjB,MACA,SACA,YACA,UACA,OACA,SACA,OACA,QACA,QACA,SACA,WACA,UACA,SACA,aACA,KACA,WAOsBC,IAAI,SAAChB,GAAD,OACdW,EAAAC,EAAAC,cAAA,UAAQI,IAAKjB,EAAUkB,QAAS,kBAAMR,EAASV,KAAYA,+BCiBhEmB,EAzCA,SAAAV,GAA0BA,EAAvBW,SAAuBX,EAAbF,OAE1B,OAEEI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAGbJ,EAAAC,EAAAC,cAAA,OAAME,UAAU,kBACdJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBAAiBO,IAAKC,EAAK,GAAGC,SAAUC,IAAKF,EAAK,GAAGG,QAE/Dd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,MAAIC,GAAG,iBAAP,mCCROY,EANC,SAAAjB,GAAA,IAAEkB,EAAFlB,EAAEkB,SAAF,OACdhB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZY,ICIUC,EANH,SAAAnB,GAAA,IAAEkB,EAAFlB,EAAEkB,SAAF,OACVhB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACZY,ICUUE,EAZH,SAAApB,GAAyC,IAAvCkB,EAAuClB,EAAvCkB,SAAUG,EAA6BrB,EAA7BqB,KAA6BC,EAAAtB,EAAvBuB,YAAuB,IAAAD,EAAhB,GAAgBA,EAAZE,EAAYxB,EAAZwB,OACnClB,EAAYe,EAAI,OAAAlC,OAAUkC,EAAV,KAAAlC,OAAkBoC,GAAlB,OAAApC,OAAkCoC,GAItD,OAFAjB,EAAYkB,EAAM,GAAArC,OAAMmB,EAAN,YAAAnB,OAA0BqC,GAAWlB,EAGrDJ,EAAAC,EAAAC,cAAA,OAAKE,UAAWA,GACbY,IC2EQO,SApDF,SAAAzB,GAAsF,IAAnF0B,EAAmF1B,EAAnF0B,MAAOV,EAA4EhB,EAA5EgB,KAAMzB,EAAsES,EAAtET,SAAUoC,EAA4D3B,EAA5D2B,UAAWC,EAAiD5B,EAAjD4B,QAASC,EAAwC7B,EAAxC6B,aAAcxB,EAA0BL,EAA1BK,GAAIb,EAAsBQ,EAAtBR,OAAQsC,EAAc9B,EAAd8B,QAE3EC,EA9Bc,SAACJ,GAErB,IAAMK,EAAU,IAAIC,KAAKN,GACrBO,EAAUF,EAAQG,SAClBC,EAAQJ,EAAQK,WACdC,EAAMN,EAAQO,UACdC,EAAOR,EAAQS,cACjBC,EAAOV,EAAQW,WACbC,EAAUZ,EAAQa,aACpBC,EAAW,KAef,OARAV,EAJe,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAI9EA,GAGXM,GAAQ,KAAMA,GAAQ,GAAII,EAAW,MAC5B,IAATJ,IAAYA,EAAO,IAEL,GAAAvD,OAPlB+C,EAJiB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAIzCA,GAOD,KAAA/C,OAAiBmD,EAAjB,KAAAnD,OAAwBiD,EAAxB,KAAAjD,OAAiCqD,EAAjC,KAAArD,OAAyCuD,EAAzC,KAAAvD,OAAiDyD,EAAjD,KAAAzD,OAA4D2D,GAQjEC,CAAgBpB,GAE7B,OAEIzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,QAAMC,GAAIA,EAAI2C,SAAUnB,GACpB3B,EAAAC,EAAAC,cAAC6C,EAAD,KAEI/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,KAChBrB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,OAAKQ,IAAKc,EAAOX,IAAKC,MAI9Bd,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,KAChBrB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYU,GAC3Bd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYyB,KAInC7B,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,KAChBrB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACVd,IAAWsC,EACR,CACI5B,EAAAC,EAAAC,cAAA,UAAQI,IAAI,aAAaH,GAAG,cAA5B,UACAH,EAAAC,EAAAC,cAAA,OAAKI,IAAI,qBAAqBF,UAAU,sBAAsBf,IAGlEW,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAgBf,MAK/CW,EAAAC,EAAAC,cAAC6C,EAAD,KAEI/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,MAENnB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAesB,SC1BvCuB,SA1CE,SAAAnD,GAAA,IAAGoD,EAAHpD,EAAGoD,QAASC,EAAZrD,EAAYqD,kBAAmBC,EAA/BtD,EAA+BsD,SAAUC,EAAzCvD,EAAyCuD,aAAzC,OAEbrD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBACJH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBAAiBC,UAAU,iBAAnC,uBACAJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eAAeC,UAAU,cAC7BJ,EAAAC,EAAAC,cAAA,QAAMC,GAAG,WAAW2C,SAAUI,GAC1BlD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,YAAUY,KAAK,WAAWwC,MAAOF,EAAUG,SAAUJ,EAAmBhD,GAAG,eAAeqD,YAAY,2BAA2BpD,UAAU,eAAeqD,KAAK,KAAKC,UAAQ,KAEhL1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,UAAQY,KAAK,eAAewC,MAAOD,EAAcE,SAAUJ,EAAmB/C,UAAU,gBAAgBD,GAAG,gBAEvGH,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,OAAOK,SAAS,GAAGC,aAAa,IAA9C,eACA5D,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,aAAd,aACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,QAAd,QACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,QAAd,QACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,SAAd,SACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,SAAd,SACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,cAAd,cACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,MAAd,MACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,aAIRtD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,sBACJH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,cAAc0D,KAAK,UAA9B,gBCSTC,SA1CG,SAAAhE,GAAA,IAAGoD,EAAHpD,EAAGoD,QAASC,EAAZrD,EAAYqD,kBAAmBC,EAA/BtD,EAA+BsD,SAAUC,EAAzCvD,EAAyCuD,aAAzC,OAEdrD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBACJH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACXJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBAAkBC,UAAU,iBAApC,uBACAJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBAAgBC,UAAU,cAC9BJ,EAAAC,EAAAC,cAAA,QAAMC,GAAG,YAAY2C,SAAUI,GAC3BlD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,YAAUY,KAAK,WAAWwC,MAAOF,EAAUG,SAAUJ,EAAmBhD,GAAG,gBAAgBqD,YAAY,2BAA2BpD,UAAU,eAAeqD,KAAK,IAAIC,UAAQ,KAEhL1D,EAAAC,EAAAC,cAAA,OAAKC,GAAG,qBAAqBC,UAAU,cACnCJ,EAAAC,EAAAC,cAAA,UAAQY,KAAK,eAAewC,MAAOD,EAAcE,SAAUJ,EAAmB/C,UAAU,iBAEpFJ,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,OAAOK,SAAS,GAAGC,aAAa,IAA9C,eACA5D,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,aAAd,aACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,QAAd,QACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,QAAd,QACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,SAAd,SACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,SAAd,SACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,cAAd,cACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,MAAd,MACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,aAIRtD,EAAAC,EAAAC,cAAA,OAAKC,GAAG,uBACJH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,eAAe0D,KAAK,UAA/B,gBCmFTE,SApHI,SAAAjE,GAab,IAXJqD,EAWIrD,EAXJqD,kBACAa,EAUIlE,EAVJkE,aACAlD,EASIhB,EATJgB,KACAmD,EAQInE,EARJmE,MACAC,EAOIpE,EAPJoE,SACAC,EAMIrE,EANJqE,WACAC,EAKItE,EALJsE,iBACAC,EAIIvE,EAJJuE,SACAC,EAGIxE,EAHJwE,SACAC,EAEIzE,EAFJyE,IAIA,OAEEvE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAEbJ,EAAAC,EAAAC,cAAA,QAAM4C,SAAUkB,GACdhE,EAAAC,EAAAC,cAAA,MAAIE,UAAU,oBAAd,gBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,QAAf,QACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOV,UAAU,eAAeoD,YAAY,qBAAqBD,SAAUJ,EAAmBG,MAAOxC,EAAM+C,KAAK,OAAOH,UAAQ,KAE7I1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,SAAf,UACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,QAAQV,UAAU,eAAeoD,YAAY,uBAAuBD,SAAUJ,EAAmBG,MAAOW,EAAOJ,KAAK,QAAQH,UAAQ,KAElJ1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,YAAf,YACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,WAAWV,UAAU,eAAeoD,YAAY,sBAAsBD,SAAUJ,EAAmBG,MAAOY,EAAUL,KAAK,WAAWH,UAAQ,KAE1J1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,cAAf,cACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,aAAaV,UAAU,eAAeoD,YAAY,2BAA2BD,SAAUJ,EAAmBG,MAAOa,EAAYN,KAAK,OAAOH,UAAQ,KAE/J1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,oBAAf,qBACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,mBAAmBV,UAAU,eAAeoD,YAAY,iDAAiDD,SAAUJ,EAAmBG,MAAOc,EAAkBP,KAAK,OAAOH,UAAQ,KAEjM1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,YAAf,YACAxE,EAAAC,EAAAC,cAAA,UAAQY,KAAK,WAAWX,GAAG,iBAAiBuD,UAAQ,EAACtD,UAAU,4BAA4BmD,SAAUJ,EAAmBG,MAAOe,GAC7HrE,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,OAAOK,SAAS,IAA9B,0BACA3D,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,cAAd,cACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,eAAd,eACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,SAAd,SACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,QAAd,QACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,aAAd,aACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,SAAd,SACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,iBAAd,iBACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,aAAd,aACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,eAAd,eACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,iBAAd,iBACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,cAAd,cACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,cAAd,cACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,kBAAd,kBACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,gBAAd,gBACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,QAAd,QACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,UAAd,UACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,gBAAd,gBACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,gBAAd,gBACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,kBAAd,kBACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,gBAAd,gBACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,aAAd,aACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,SAAd,SACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,QAAd,QACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,WACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,YAAd,YACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,cAAd,cACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,iBAAd,iBACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,aAAd,aACAtD,EAAAC,EAAAC,cAAA,UAAQoD,MAAM,WAAd,aAGJtD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,YAAf,mBACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,WAAWV,UAAU,eAAeoD,YAAY,eAAeD,SAAUJ,EAAmBG,MAAOgB,EAAUT,KAAK,OAAOH,UAAQ,KAE/I1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,OAAf,aACAxE,EAAAC,EAAAC,cAAA,YAAUY,KAAK,MAAMX,GAAG,oBAAoBC,UAAU,eAAeoD,YAAY,kCAAkCD,SAAUJ,EAAmBG,MAAOiB,EAAKV,KAAK,OAAOH,UAAQ,KAElL1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYyD,KAAK,UAAnC,eCjFKY,uCAzBE,SAAA3E,GAAA,IAAG0B,EAAH1B,EAAG0B,MAAOV,EAAVhB,EAAUgB,KAAMmD,EAAhBnE,EAAgBmE,MAAOE,EAAvBrE,EAAuBqE,WAAYC,EAAnCtE,EAAmCsE,iBAAkBC,EAArDvE,EAAqDuE,SAAUE,EAA/DzE,EAA+DyE,IAA/D,OAEbvE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAf,YACAJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAUM,IAAKc,EAAOX,IAAI,sBAE7Cb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,WAPJ,IAOyCJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,IAA0BU,EAA1B,KACrCd,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,YATJ,IAS0CJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,IAA0B6D,EAA1B,KACtCjE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,iBAXJ,IAW+CJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAY+D,EAAzB,KAC3CnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,wBAbJ,IAasDJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAYgE,GAC3EpE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,eAfJ,IAe6CJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAYiE,GAClErE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAb,UAjBJ,IAiBwCJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAYmE,kCCyEtDG,6MAzFbC,MAAQ,CAENlE,SAAUmE,EAAKC,MAAMpE,SACrBd,KAAMiF,EAAKC,MAAMlF,KAEjBmB,KAAM,GACNuD,SAAU,MAWZlB,kBAAoB,SAAA2B,GAAS,IAAAC,EACHD,EAAME,OAAtBlE,EADmBiE,EACnBjE,KAAMwC,EADayB,EACbzB,MACdsB,EAAKK,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBpE,EAAOwC,OAG1B8B,cAAgB,SAAAN,GACdA,EAAMO,iBACN,IAAMC,EAAUR,EAAME,OAAOlE,KAAKwC,MAC5BiC,EAAcT,EAAME,OAAOX,SAASf,MAGtCgC,GAAWC,EACbjH,EAAIC,WAAW,CACbuC,KAAMwE,EACNjB,SAAUkB,IAETC,KAAK,WACJC,MAAM,oCACNb,EAAKK,SAAS,CACZnE,KAAM,GACNuD,SAAU,OAIboB,MAAM,iGAQX,OAEEzF,EAAAC,EAAAC,cAACwF,EAAD,KACE1F,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,MAClBrB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,cAINF,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,KAClBrB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,QAAM4C,SAAU6C,KAAKP,eACnBpF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,QAAf,iBACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOV,UAAU,eAAeoD,YAAY,mBAAmBD,SAAUoC,KAAKxC,kBAAmBG,MAAOqC,KAAKhB,MAAM7D,KAAM+C,KAAK,OAAOH,UAAQ,KAE3J1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,YAAf,YACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,WAAWV,UAAU,eAAeoD,YAAY,cAAcD,SAAUoC,KAAKxC,kBAAmBG,MAAOqC,KAAKhB,MAAMN,SAAUR,KAAK,WAAWH,UAAQ,KAElK1D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYyD,KAAK,UAAnC,oBAKR7D,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,MACpBrB,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,eAjFLuE,IAAMC,WCmHhBC,6MAjHbnB,MAAQ,CAENlE,SAAUmE,EAAKC,MAAMpE,SACrBd,KAAMiF,EAAKC,MAAMlF,KAEjBmB,KAAM,GACNiF,MAAO,GACPC,aAAc,GACd/B,MAAO,GACPC,SAAU,MAWZf,kBAAoB,SAAA2B,GAAS,IAAAC,EACHD,EAAME,OAAtBlE,EADmBiE,EACnBjE,KAAMwC,EADayB,EACbzB,MACdsB,EAAKK,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBpE,EAAOwC,OAG1B2C,cAAgB,SAAAnB,GACdA,EAAMO,iBACN,IAAMC,EAAUR,EAAME,OAAOlE,KAAKwC,MAC5B4C,EAAWpB,EAAME,OAAOe,MAAMzC,MAC9B6C,EAAkBrB,EAAME,OAAOgB,aAAa1C,MAC5C8C,EAAWtB,EAAME,OAAOf,MAAMX,MAC9B+C,EAAcvB,EAAME,OAAOd,SAASZ,MAGtCgC,GAAWY,GAAYC,GAAmBC,GAAYC,EACxD/H,EAAIK,WAAW,CACbmC,KAAMwE,EACNS,MAAOG,EACPF,aAAcG,EACdlC,MAAOmC,EACPlC,SAAUmC,IAETb,KAAK,WACJC,MAAM,gCACNb,EAAKK,SAAS,CACZnE,KAAM,GACNiF,MAAO,GACPC,aAAc,GACd/B,MAAO,GACPC,SAAU,OAIbuB,MAAM,iGAQX,OAEEzF,EAAAC,EAAAC,cAACwF,EAAD,KACE1F,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,MAClBrB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,cAINF,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,KAClBrB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,QAAM4C,SAAU6C,KAAKM,eACnBjG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,QAAf,QACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOV,UAAU,eAAeoD,YAAY,UAAUD,SAAUoC,KAAKxC,kBAAmBG,MAAOqC,KAAKhB,MAAM7D,KAAM+C,KAAK,OAAOH,UAAQ,KAElJ1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,SAAf,SACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,QAAQV,UAAU,eAAeoD,YAAY,WAAWD,SAAUoC,KAAKxC,kBAAmBG,MAAOqC,KAAKhB,MAAMoB,MAAOlC,KAAK,QAAQH,UAAQ,KAEtJ1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,gBAAf,qBACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,eAAeV,UAAU,eAAeoD,YAAY,uBAAuBD,SAAUoC,KAAKxC,kBAAmBG,MAAOqC,KAAKhB,MAAMqB,aAAcnC,KAAK,eAAeH,UAAQ,KAEvL1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,SAAf,UACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,QAAQV,UAAU,eAAeoD,YAAY,WAAWD,SAAUoC,KAAKxC,kBAAmBG,MAAOqC,KAAKhB,MAAMV,MAAOJ,KAAK,QAAQH,UAAQ,KAEtJ1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,YAAf,YACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,WAAWV,UAAU,eAAeoD,YAAY,cAAcD,SAAUoC,KAAKxC,kBAAmBG,MAAOqC,KAAKhB,MAAMT,SAAUL,KAAK,WAAWH,UAAQ,KAElK1D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,YAAYyD,KAAK,UAAnC,oBAKR7D,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,MACpBrB,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,eAzGLuE,IAAMC,mBCuEhBS,SCnEIV,IAAMC,gBCFND,IAAMC,2NFCvBlB,MAAQ,CACNV,MAAO,GACPC,SAAU,GACVqC,WAAY,MAIdC,mBAAqB,WACf5B,EAAKC,MAAMpE,UACbmE,EAAKK,SAAS,CAAEsB,WAAY,aAIhCpD,kBAAoB,SAAA2B,GAAS,IAAAC,EACHD,EAAME,OAAtBlE,EADmBiE,EACnBjE,KAAMwC,EADayB,EACbzB,MACdsB,EAAKK,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBpE,EAAOwC,OAG1BmD,YAAc,SAAA3B,GACZA,EAAMO,iBACN/G,EAAIoB,MAAM,CAAEuE,MAAOW,EAAKD,MAAMV,MAAOC,SAAUU,EAAKD,MAAMT,WACvDsB,KAAK,SAACkB,GACL9B,EAAKC,MAAM8B,QAAQD,EAAIE,KAAKjH,MAC5BiF,EAAKK,SAAS,CAEZsB,WAAY,qFAQlB,OAAIZ,KAAKhB,MAAM4B,WACNvG,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAUC,GAAInB,KAAKhB,MAAM4B,aAKhCvG,EAAAC,EAAAC,cAACwF,EAAD,KACE1F,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,MACpBrB,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,KAClBrB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,GAAG,mBAAP,kBACAH,EAAAC,EAAAC,cAAA,QAAM4C,SAAU6C,KAAKc,aACnBzG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,SAAf,SACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,QAAQV,UAAU,eAAeyD,KAAK,OAAOP,MAAOqC,KAAKhB,MAAMV,MAAOV,SAAUoC,KAAKxC,qBAEnGnD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOsE,QAAQ,YAAf,YACAxE,EAAAC,EAAAC,cAAA,SAAOY,KAAK,WAAWV,UAAU,eAAeyD,KAAK,WAAWP,MAAOqC,KAAKhB,MAAMT,SAAUX,SAAUoC,KAAKxC,qBAE7GnD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,qBAAqByD,KAAK,UAA5C,YAIN7D,EAAAC,EAAAC,cAAC8C,EAAD,CAAK7B,KAAK,KAAKE,KAAK,eA5DVuE,IAAMC,YGuFXkB,SCnFOnB,IAAMC,2NDC1BlB,MAAQ,CACNqC,QAAS,UACTvG,UAAU,EACVd,KAAM,QAwBRsH,aAAe,WACb3I,EAAIsB,SACD4F,KAAK,WACJZ,EAAKK,SAAS,CACZtF,KAAM,KACNc,UAAU,SAMlBkG,QAAU,SAAChH,GACTiF,EAAKK,SAAS,CACZtF,OACAc,UAAU,wFAnCM,IAAAyG,EAAAvB,KAClBA,KAAKV,SAAS,CAAE+B,QAAS,SACzB1I,EAAImB,kBACD+F,KAAK,SAAAkB,GACAA,EAAIE,KAAKjH,KACXuH,EAAKjC,SAAS,CACZ+B,QAAS,QACTvG,UAAU,EACVd,KAAM+G,EAAIE,KAAKjH,OAIjBuH,EAAKjC,SAAS,CACZ+B,QAAS,QACTvG,UAAU,EACVd,KAAM,0CAwBP,IAAAwH,EAAAxB,KAGP,MAA2B,YAAvBA,KAAKhB,MAAMqC,QACNhH,EAAAC,EAAAC,cAAA,4BAIkB,SAAvByF,KAAKhB,MAAMqC,QACNhH,EAAAC,EAAAC,cAAA,wBAKPF,EAAAC,EAAAC,cAACkH,EAAA,EAAD,KACEpH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmH,EAAD,CAAQ5G,SAAUkF,KAAKhB,MAAMlE,SAAUb,OAAQ+F,KAAKsB,eAEpDjH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAMzH,EAAAC,EAAAC,cAACwH,EAAD,CAAOjH,SAAU0G,EAAKxC,MAAMlE,SAAUd,KAAMwH,EAAKxC,MAAMhF,UAC3FK,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,wBAAwBC,OAAQ,kBAAMzH,EAAAC,EAAAC,cAACyH,EAAD,CAAYlH,SAAU0G,EAAKxC,MAAMlE,SAAUd,KAAMwH,EAAKxC,MAAMhF,UACpHK,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,OAAQ,kBAAMzH,EAAAC,EAAAC,cAAC0H,EAAD,CAAYnH,SAAU0G,EAAKxC,MAAMlE,SAAUd,KAAMwH,EAAKxC,MAAMhF,UAChHK,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAMzH,EAAAC,EAAAC,cAACwH,EAAD,CAAOf,QAASQ,EAAKR,QAASlG,SAAU0G,EAAKxC,MAAMlE,SAAUd,KAAMwH,EAAKxC,MAAMhF,UACvHK,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,OAAQ,kBAAMzH,EAAAC,EAAAC,cAAC0H,EAAD,CAAYnH,SAAU0G,EAAKxC,MAAMlE,SAAUd,KAAMwH,EAAKxC,MAAMhF,UAChHK,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAMzH,EAAAC,EAAAC,cAACwH,EAAD,CAAOjH,SAAU0G,EAAKxC,MAAMlE,SAAUd,KAAMwH,EAAKxC,MAAMhF,mBAtEnFiG,IAAMC,YEClBgC,EAAcC,QACW,cAA7BC,OAAO1D,SAAS2D,UAEe,UAA7BD,OAAO1D,SAAS2D,UAEhBD,OAAO1D,SAAS2D,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT3C,KAAK,SAAA+C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9D,QACfyD,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KChEjEC,IAASxB,OAAOzH,EAAAC,EAAAC,cAACgJ,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBhB,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,GAAwBvB,OAAO1D,UAC3CkF,SAAWxB,OAAO1D,SAASkF,OAIvC,OAGFxB,OAAOyB,iBAAiB,OAAQ,WAC9B,IAAMrB,EAAK,GAAAlJ,OAAMqK,GAAN,sBAENzB,EAwCX,SAAiCM,GAE/BsB,MAAMtB,GACH3C,KAAK,SAAAkE,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQzK,IAAI,gBAAgB0K,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAMtE,KAAK,SAAA+C,GACjCA,EAAawB,aAAavE,KAAK,WAC7BuC,OAAO1D,SAAS2F,aAKpB9B,EAAgBC,KAGnBY,MAAM,WACLF,QAAQC,IACN,mEAzDAmB,CAAwB9B,GAHxBD,EAAgBC,MC7BxB+B","file":"static/js/main.1eee716f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fb.73cf2981.png\";","module.exports = __webpack_public_path__ + \"static/media/gith.dd24e5cb.png\";","module.exports = __webpack_public_path__ + \"static/media/insta.a6179871.png\";","module.exports = __webpack_public_path__ + \"static/media/twit.2451ce30.png\";","import axios from \"axios\"; // Promise-based HTTP client\n\nexport default {\n\n  // API Methods (/api)\n  addNewBldg: (newBldg) => { return axios.post(\"/api/buildings/createnew\", newBldg)},\n  addNewUser: (newUser) => { return axios.post(\"/api/users/createnew\", newUser) },\n  createPost: (post) => { return axios.post(\"/api/posts/new\", post) },\n  deletePost: (postId) => { return axios.delete(`/api/posts/delete/${postId}`); },\n  getAllPosts: () => { return axios.get(\"/api/posts/all\"); },\n  getPostsByCat: (category, userId) => {\n    var queryUrl = \"/api/posts/category/\" + category;\n    if (userId) {\n      queryUrl += \"/\" + userId;\n      return axios.get(queryUrl);\n    }\n    else return axios.get(queryUrl);\n    \n  },\n  getPostsByUser: (userId) => { return axios.get(\"/api/posts/user/\" + userId); },\n\n  // User Authentication Methods (/auth)\n  getLoggedOnUser: () => { return axios.get(\"/auth/getUser\"); },\n  login: (user) => { return axios.post(\"/auth/login\", user) },\n  logout: () => { return axios.get(\"/auth/logout\"); },\n\n}","import React from \"react\";\nimport \"./CatButtons.css\"; // Category Button CSS\n\nconst CatButtons = ({ getPosts }) => {\n\n    const categoryList = [\n        \"All\",\n        \"Coding\",\n        \"Education\",\n        \"Fashion\",\n        \"Food\",\n        \"Health\",\n        \"Love\",\n        \"Money\",\n        \"Music\",\n        \"People\",\n        \"Politics\",\n        \"Science\",\n        \"Sports\",\n        \"Technology\",\n        \"TV\",\n        \"Weather\"\n    ];\n\n    return (\n\n        <nav id=\"categoryNav\" className=\"navbar navbar-expand-lg\">\n            <div className=\"categories\">\n                {categoryList.map((category) => (\n                    <button key={category} onClick={() => getPosts(category)}>{category}</button>\n                ))}\n            </div>\n        </nav>\n\n    ); // End of return()\n\n}; // End of CatButtons()\n\nexport default CatButtons;","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport \"./NavBar.css\"; // NavBar CSS\nimport Logo from \"./Logo.json\"; // Hate&Date Logo\n\nconst NavBar = ({ loggedIn, logout }) => {\n\n  return (\n\n    <nav className=\"navbar navbar-expand-lg\" >\n\n      {/* NavBar Headers */}\n      < div className=\"navBarCoHeader\" >\n        <img id=\"navBarLogoText\" src={Logo[0].imageUrl} alt={Logo[0].name} />\n      </div >\n      <div className=\"navBarAppHeader\">\n        <h3 id=\"navBarAppText\">Facilities Management System</h3>\n      </div>\n\n      {/* NavBar Buttons */}\n      {/* < div className=\"navBarBtnWrapper\" >\n        <ul className=\"navBarBtnList\">\n          {loggedIn ?\n            [\n              <li key=\"about\"><Link to=\"/about\"><button className=\"navBarBtn\">About</button></Link></li>,\n              <li key=\"feed\"><Link to=\"/feed\"><button className=\"navBarBtn\">Feed</button></Link></li>,\n              <li key=\"profile\"><Link to=\"/profile\"> <button className=\"navBarBtn\">Profile</button></Link></li>,\n              <li key=\"logout\"><a href=\"/\"><button className=\"navBarBtn\" onClick={logout}>Logout</button></a></li>\n            ]\n            :\n            ['']\n            // [\n            //   <li key=\"home\"><Link to=\"/\"><button className=\"navBarBtn\">Home</button></Link></li>,\n            //   <li key=\"about\"><Link to=\"/about\"><button className=\"navBarBtn\">About</button></Link></li>,\n            //   <li key=\"login\"><Link to=\"/login\"> <button className=\"navBarBtn\">Login</button></Link></li>\n            // ]\n          }\n        </ul>\n      </div > */}\n\n    </nav >\n\n  ); // End of return()\n\n}; // End of NavBar()\n\nexport default NavBar;","import React from \"react\";\n\nconst Wrapper = ({children}) => (\n  <div className=\"container\">\n    {children}\n  </div>\n);\n\nexport default Wrapper;","import React from 'react'\n\nconst Row = ({children}) => (\n  <div className=\"row\">\n    {children}\n  </div>\n);\n\nexport default Row;","import React from 'react'\n\nconst Col = ({children, size, span = 12, offset}) => {\n  let className = size ? `col-${size}-${span}` : `col-${span}`;\n\n  className = offset ? `${className} offset-${offset}` : className;\n\n  return (\n    <div className={className}>\n      {children}\n    </div>\n  );\n}\n\nexport default Col;","import React from \"react\";\nimport { Col, Row } from \"../BootstrapGrid\";\nimport \"./Post.css\"; // User Post CSS\n\nconst formatTimeStamp = (timeStamp) => {\n\n    const dateObj = new Date(timeStamp); // Creates new date object\n    var weekDay = dateObj.getDay(); // Returns day of the week (from 0-6)  \n    var month = dateObj.getMonth(); // Returns month (from 0-11)\n    const day = dateObj.getDate(); // Returns day of the month (from 1-31)\n    const year = dateObj.getFullYear(); // Returns year\n    var hour = dateObj.getHours(); // Returns hour (from 0-23)\n    const minutes = dateObj.getMinutes(); // Returns minutes (from 0-59)\n    var meridian = \"AM\";\n\n    const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n    // Converting numbers to string values\n    weekDay = weekDays[weekDay];\n    month = months[month];\n\n    // Converting from 24 to 12 hour\n    if (hour >= 12) { hour -= 12; meridian = \"PM\"; }\n    if (hour === 0) hour = 12;    \n    \n    const newTimeStamp = `${weekDay} ${day} ${month} ${year} ${hour}:${minutes} ${meridian}`;\n    \n    return newTimeStamp;\n\n}\n\nconst Post = ({ image, name, category, timeStamp, comment, handleDelete, id, userId, user_id }) => {\n\n    const time = formatTimeStamp(timeStamp);\n\n    return (\n\n        <div className=\"postContainer\">\n            <form id={id} onSubmit={handleDelete}>\n                <Row>\n                    {/* Post User Image Column */}\n                    <Col size=\"md\" span=\"2\">\n                        <div className=\"postImgWrapper\">\n                            <img src={image} alt={name} />\n                        </div>\n                    </Col>\n                    {/* Post User Name and Timestamp Column */}\n                    <Col size=\"md\" span=\"6\">\n                        <div className=\"postUserAndTime\">\n                            <div className=\"postUser\">{name}</div>\n                            <div className=\"postTime\">{time}</div>\n                        </div>\n                    </Col>\n                    {/* Post Category\\Delete Button Column */}\n                    <Col size=\"md\" span=\"4\">\n                        <div className=\"postDelBtn\">\n                            {userId === user_id ?\n                                [\n                                    <button key=\"postDelBtn\" id=\"postDelBtn\">✗</button>,\n                                    <div key=\"postCategoryDelBtn\" className=\"postCategoryDelBtn\">{category}</div>\n                                ]\n                                :\n                                <div className=\"postCategory\">{category}</div>\n                            }\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    {/* Post Comment Column */}\n                    <Col size=\"md\">\n\n                        <div className=\"postComment\">{comment}</div>\n                    </Col>\n\n                </Row>\n\n            </form>\n        </div>\n\n    ); // End of return()\n\n}; // End of Post()\n\nexport default Post;","import React from \"react\";\n// import { Col, Row, Wrapper } from \"../BootstrapGrid\";\nimport \"./PostForm.css\"; // Post Form CSS\n\nconst PostForm = ({ addPost, handleInputChange, postBody, postCategory }) => (\n\n    <div id=\"postFormPanel\">\n        <div className=\"panel\">\n            <div id=\"postFormHeader\" className=\"panel-heading\">Share your story...</div>\n            <div id=\"postFormBody\" className=\"panel-body\">\n                <form id=\"postForm\" onSubmit={addPost}>\n                    <div className=\"form-group\">\n                        <textarea name=\"postBody\" value={postBody} onChange={handleInputChange} id=\"postFormBody\" placeholder=\"Write your story here...\" className=\"form-control\" rows=\"10\" required/>\n                    </div>\n                    <div className=\"form-group\">\n                        <select name=\"postCategory\" value={postCategory} onChange={handleInputChange} className=\"custom-select\" id=\"postCategory\">\n\n                            <option value=\"null\" disabled=\"\" defaultValue=\"\">Category...</option>\n                            <option value=\"Coding\">Coding</option>\n                            <option value=\"Education\">Education</option>\n                            <option value=\"Fashion\">Fashion</option>\n                            <option value=\"Food\">Food</option>\n                            <option value=\"Health\">Health</option>\n                            <option value=\"Love\">Love</option>\n                            <option value=\"Money\">Money</option>\n                            <option value=\"Music\">Music</option>\n                            <option value=\"People\">People</option>\n                            <option value=\"Politics\">Politics</option>\n                            <option value=\"Science\">Science</option>\n                            <option value=\"Sports\">Sports</option>\n                            <option value=\"Technology\">Technology</option>\n                            <option value=\"TV\">TV</option>\n                            <option value=\"Weather\">Weather</option>\n\n                        </select>\n                    </div>\n                    <div id=\"postFormBtnWrapper\">\n                        <button id=\"postFormBtn\" type=\"submit\">Share</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n);\n\nexport default PostForm;","import React from \"react\";\n// import { Col, Row, Wrapper } from \"../BootstrapGrid\";\nimport \"./PostForm2.css\"; // Post Form CSS\n\nconst PostForm2 = ({ addPost, handleInputChange, postBody, postCategory }) => (\n\n    <div id=\"postForm2Panel\">\n        <div className=\"panel\">\n            <div id=\"postForm2Header\" className=\"panel-heading\">Share your story...</div>\n            <div id=\"postForm2Body\" className=\"panel-body\">\n                <form id=\"postForm2\" onSubmit={addPost}>\n                    <div className=\"form-group\">\n                        <textarea name=\"postBody\" value={postBody} onChange={handleInputChange} id=\"postForm2Body\" placeholder=\"Write your story here...\" className=\"form-control\" rows=\"3\" required/>\n                    </div>\n                    <div id=\"postForm2CatSelect\" className=\"form-group\">\n                        <select name=\"postCategory\" value={postCategory} onChange={handleInputChange} className=\"custom-select\">\n\n                            <option value=\"null\" disabled=\"\" defaultValue=\"\">Category...</option>\n                            <option value=\"Coding\">Coding</option>\n                            <option value=\"Education\">Education</option>\n                            <option value=\"Fashion\">Fashion</option>\n                            <option value=\"Food\">Food</option>\n                            <option value=\"Health\">Health</option>\n                            <option value=\"Love\">Love</option>\n                            <option value=\"Money\">Money</option>\n                            <option value=\"Music\">Music</option>\n                            <option value=\"People\">People</option>\n                            <option value=\"Politics\">Politics</option>\n                            <option value=\"Science\">Science</option>\n                            <option value=\"Sportst\">Sports</option>\n                            <option value=\"Technology\">Technology</option>\n                            <option value=\"TV\">TV</option>\n                            <option value=\"Weather\">Weather</option>\n\n                        </select>\n                    </div>\n                    <div id=\"postForm2BtnWrapper\">\n                        <button id=\"postForm2Btn\" type=\"submit\">Share</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n);\n\nexport default PostForm2;","import React from \"react\";\n// import { Col, Row, Wrapper } from \"../BootstrapGrid\";\nimport \"./SignUpForm.css\"; // Sign-Up Form CSS\n\nconst SignUpForm = ({\n\n  handleInputChange,\n  handleSignUp,\n  name,\n  email,\n  password,\n  occupation,\n  relationshipType,\n  location,\n  photoUrl,\n  bio\n\n}) => {\n\n  return (\n\n    <div className=\"signUpForm\">\n\n      <form onSubmit={handleSignUp}>\n        <h1 className=\"signUpFormHeader\">Sign Up Form</h1>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input name=\"name\" className=\"form-control\" placeholder=\"Enter your name...\" onChange={handleInputChange} value={name} type=\"name\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">E-mail</label>\n          <input name=\"email\" className=\"form-control\" placeholder=\"Enter your e-mail...\" onChange={handleInputChange} value={email} type=\"email\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input name=\"password\" className=\"form-control\" placeholder=\"Enter a password...\" onChange={handleInputChange} value={password} type=\"password\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"occupation\">Occupation</label>\n          <input name=\"occupation\" className=\"form-control\" placeholder=\"Enter your occupation...\" onChange={handleInputChange} value={occupation} type=\"text\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"relationshipType\">Relationship Type</label>\n          <input name=\"relationshipType\" className=\"form-control\" placeholder=\"What kind of relationship are you looking for?\" onChange={handleInputChange} value={relationshipType} type=\"text\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"location\">Location</label>\n          <select name=\"location\" id=\"location-input\" required className=\"form-control selectpicker\" onChange={handleInputChange} value={location}>\n            <option value=\"null\" disabled=\"\">Location (US State)...</option>\n            <option value=\"Alabama\">Alabama</option>\n            <option value=\"Alaska\">Alaska</option>\n            <option value=\"Arizona\">Arizona</option>\n            <option value=\"Arkansas\">Arkansas</option>\n            <option value=\"California\">California</option>\n            <option value=\"Colorado\">Colorado</option>\n            <option value=\"Connecticut\">Connecticut</option>\n            <option value=\"Delaware\">Delaware</option>\n            <option value=\"Florida\">Florida</option>\n            <option value=\"Georgia\">Georgia</option>\n            <option value=\"Hawaii\">Hawaii</option>\n            <option value=\"Idaho\">Idaho</option>\n            <option value=\"Illinois\">Illinois</option>\n            <option value=\"Indiana\">Indiana</option>\n            <option value=\"Iowa\">Iowa</option>\n            <option value=\"Kansas\">Kansas</option>\n            <option value=\"Kentucky\">Kentucky</option>\n            <option value=\"Lousisana\">Louisiana</option>\n            <option value=\"Maine\">Maine</option>\n            <option value=\"Maryland\">Maryland</option>\n            <option value=\"Massachusetts\">Massachusetts</option>\n            <option value=\"Michigan\">Michigan</option>\n            <option value=\"Minnesota\">Minnesota</option>\n            <option value=\"Mississippi\">Mississippi</option>\n            <option value=\"Missouri\">Missouri</option>\n            <option value=\"Montana\">Montana</option>\n            <option value=\"Nebraska\">Nebraska</option>\n            <option value=\"Nevada\">Nevada</option>\n            <option value=\"New Hamsphire\">New Hampshire</option>\n            <option value=\"New Jersey\">New Jersey</option>\n            <option value=\"New Mexico\">New Mexico</option>\n            <option value=\"New York\">New York</option>\n            <option value=\"North Carolina\">North Carolina</option>\n            <option value=\"North Dakota\">North Dakota</option>\n            <option value=\"Ohio\">Ohio</option>\n            <option value=\"Oklahoma\">Oklahoma</option>\n            <option value=\"Oregon\">Oregon</option>\n            <option value=\"Pennsylvania\">Pennsylvania</option>\n            <option value=\"Rhode Island\">Rhode Island</option>\n            <option value=\"South Carolina\">South Carolina</option>\n            <option value=\"South Dakota\">South Dakota</option>\n            <option value=\"Tennessee\">Tennessee</option>\n            <option value=\"Texas\">Texas</option>\n            <option value=\"Utah\">Utah</option>\n            <option value=\"Vermont\">Vermont</option>\n            <option value=\"Virginia\">Virginia</option>\n            <option value=\"Washington\">Washington</option>\n            <option value=\"West Virginia\">West Virginia</option>\n            <option value=\"Wisconson\">Wisconsin</option>\n            <option value=\"Wyoming\">Wyoming</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"photoUrl\">Profile Picture</label>\n          <input name=\"photoUrl\" className=\"form-control\" placeholder=\"Photo Url...\" onChange={handleInputChange} value={photoUrl} type=\"text\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"bio\">About You</label>\n          <textarea name=\"bio\" id=\"signUpFormTextBox\" className=\"form-control\" placeholder=\"Say something about yourself...\" onChange={handleInputChange} value={bio} type=\"text\" required />\n        </div>\n        <div className=\"signUpFormBtnWrapper\">\n          <button className=\"signUpBtn\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n\n    </div>\n\n  );\n\n};\n\nexport default SignUpForm;","import React from \"react\";\n// import { Col, Row, Wrapper } from \"../BootstrapGrid\";\nimport \"./UserInfo.css\"; // Profile Page User Info CSS\n\nconst UserInfo = ({ image, name, email, occupation, relationshipType, location, bio }) => (\n\n    <div className=\"userDiv\">\n        <div className=\"userTitle\">About Me</div>\n        <br />\n        <div className=\"imgContainer\">\n            <img className=\"userImg\" src={image} alt=\"userprofilephoto\" />\n        </div>\n        <br />\n        <p className=\"userInfo\" > Name: </p> <p className=\"userData\"> {name} </p>\n        <br />\n        <p className=\"userInfo\" > Email: </p> <p className=\"userData\"> {email} </p>\n        <br />\n        <p className=\"userInfo\" > Occupation: </p> <p className=\"userData\">{occupation} </p>\n        <br />\n        <p className=\"userInfo\" > Relationship Type: </p> <p className=\"userData\">{relationshipType}</p>\n        <br />\n        <p className=\"userInfo\" > Location: </p> <p className=\"userData\">{location}</p>\n        <br />\n        <p className=\"userInfo\" > Bio: </p> <p className=\"userData\">{bio}</p>\n\n    </div>\n\n); // End of UserInfo()\n\nexport default UserInfo;","import React from \"react\";\n// import { Redirect } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\n\nclass AddNewBldg extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    name: \"\",\n    location: \"\"\n\n  }\n\n  // Re-enable once all pages/components are completed\n  // componentDidMount = () => {\n  //   if (!this.state.loggedIn) {\n  //     // Redirect to \"/\" if user not logged in\n  //     return <Redirect to=\"/\" />\n  // }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  };\n\n  handleNewBldg = event => {\n    event.preventDefault();\n    const newName = event.target.name.value;\n    const newLocation = event.target.location.value;\n\n    // Input validation\n    if (newName && newLocation) {\n      API.addNewBldg({\n        name: newName,\n        location: newLocation\n      })\n        .then(() => {\n          alert(\"New building added successfully!\");\n          this.setState({\n            name: \"\",\n            location: \"\"\n          });\n        });\n    }\n    else alert(\"All fields required!\");\n  };\n\n  render() {\n\n    // Re-enable once all components/pages are completed\n    // if (!this.state.loggedIn) return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n          <Col size=\"md\" span=\"12\">\n            <div>\n              <h3>Building Administration - Add New Building</h3>\n              <hr></hr>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md\" span=\"4\">\n            <div className=\"genFormSettings\">\n              <form onSubmit={this.handleNewBldg}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Building Name</label>\n                  <input name=\"name\" className=\"form-control\" placeholder=\"Building Name...\" onChange={this.handleInputChange} value={this.state.name} type=\"name\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"location\">Location</label>\n                  <input name=\"location\" className=\"form-control\" placeholder=\"Location...\" onChange={this.handleInputChange} value={this.state.location} type=\"location\" required />\n                </div>\n                <div>\n                  <button className=\"genAppBtn\" type=\"submit\">ADD NEW BLDG</button>\n                </div>\n              </form>\n            </div>\n          </Col>\n          <Col size=\"md\" span=\"4\"></Col>\n          <Col size=\"md\" span=\"2\"></Col>\n        </Row>\n      </Wrapper>\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of UserAdmin class component\n\nexport default AddNewBldg;","import React from \"react\";\n// import { Redirect } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\n\nclass AddNewUser extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    name: \"\",\n    title: \"\",\n    userImageUrl: \"\",\n    email: \"\",\n    password: \"\"\n\n  }\n\n  // Re-enable once all pages/components are completed\n  // componentDidMount = () => {\n  //   if (!this.state.loggedIn) {\n  //     // Redirect to \"/\" if user not logged in\n  //     return <Redirect to=\"/\" />\n  // }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  };\n\n  handleNewUser = event => {\n    event.preventDefault();\n    const newName = event.target.name.value;\n    const newTitle = event.target.title.value;\n    const newUserImageUrl = event.target.userImageUrl.value;\n    const newEmail = event.target.email.value;\n    const newPassword = event.target.password.value;\n\n    // Input validation\n    if (newName && newTitle && newUserImageUrl && newEmail && newPassword) {\n      API.addNewUser({\n        name: newName,\n        title: newTitle,\n        userImageUrl: newUserImageUrl,\n        email: newEmail,\n        password: newPassword\n      })\n        .then(() => {\n          alert(\"New user added successfully!\");\n          this.setState({\n            name: \"\",\n            title: \"\",\n            userImageUrl: \"\",\n            email: \"\",\n            password: \"\"\n          });\n        });\n    }\n    else alert(\"All fields required!\");\n  };\n\n  render() {\n\n    // Re-enable once all components/pages are completed\n    // if (!this.state.loggedIn) return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n          <Col size=\"md\" span=\"12\">\n            <div>\n              <h3>User Administration - Add New User</h3>\n              <hr></hr>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md\" span=\"4\">\n            <div className=\"genFormSettings\">\n              <form onSubmit={this.handleNewUser}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input name=\"name\" className=\"form-control\" placeholder=\"Name...\" onChange={this.handleInputChange} value={this.state.name} type=\"name\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Title</label>\n                  <input name=\"title\" className=\"form-control\" placeholder=\"Title...\" onChange={this.handleInputChange} value={this.state.title} type=\"title\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"userImageUrl\">Profile Image Url</label>\n                  <input name=\"userImageUrl\" className=\"form-control\" placeholder=\"Profile Image Url...\" onChange={this.handleInputChange} value={this.state.userImageUrl} type=\"userImageUrl\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">E-mail</label>\n                  <input name=\"email\" className=\"form-control\" placeholder=\"Email...\" onChange={this.handleInputChange} value={this.state.email} type=\"email\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input name=\"password\" className=\"form-control\" placeholder=\"Password...\" onChange={this.handleInputChange} value={this.state.password} type=\"password\" required />\n                </div>\n                <div>\n                  <button className=\"genAppBtn\" type=\"submit\">ADD NEW USER</button>\n                </div>\n              </form>\n            </div>\n          </Col>\n          <Col size=\"md\" span=\"4\"></Col>\n          <Col size=\"md\" span=\"2\"></Col>\n        </Row>\n      </Wrapper>\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of UserAdmin class component\n\nexport default AddNewUser;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport API from \"../../utils/API\";\nimport \"./Login.css\"; // Styling\n\nclass Login extends React.Component {\n\n  state = {\n    email: \"\",\n    password: \"\",\n    redirectTo: \"\"\n  }\n\n  // Set 'redirectTo' to '/feed' if user logged in\n  componentWillMount = () => {\n    if (this.props.loggedIn) {\n      this.setState({ redirectTo: \"/feed\" });\n    }\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  };\n\n  handleLogin = event => {\n    event.preventDefault();\n    API.login({ email: this.state.email, password: this.state.password })\n      .then((res) => {\n        this.props.setUser(res.data.user)\n        this.setState({\n          // Set 'redirectTo' to '/feed' if user logged in\n          redirectTo: \"/feed\"\n        });\n      });\n  }\n\n  render() {\n\n    // Redirect to /feed if user logged in\n    if (this.state.redirectTo) {\n      return <Redirect to={this.state.redirectTo} />\n    }\n\n    return (\n\n      <Wrapper>\n        <Row>\n          <Col size=\"md\" span=\"4\"></Col>\n          <Col size=\"md\" span=\"4\">\n            <div>\n              <h3 id=\"loginFormHeader\">Welcome to AMS</h3>\n              <form onSubmit={this.handleLogin}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input name=\"email\" className=\"form-control\" type=\"text\" value={this.state.email} onChange={this.handleInputChange} />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input name=\"password\" className=\"form-control\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} />\n                </div>\n                <button className=\"loginBtn genAppBtn\" type=\"submit\">LOGIN</button>\n              </form>\n            </div>\n          </Col>\n          <Col size=\"md\" span=\"4\"></Col>\n        </Row>\n      </Wrapper>\n\n    ); // End of Return\n\n  }; // End of render()\n\n}; // End of Class Login Component\n\nexport default Login;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport CatButtons from \"../../components/CatButtons\";\nimport Post from \"../../components/Post\";\nimport PostForm from \"../../components/PostForm\";\nimport \"./Feed.css\"; // Feed Page CSS\n\nclass Feed extends React.Component {\n\n    state = {\n        loggedIn: this.props.loggedIn,\n        user: this.props.user,\n        postBody: \"\",\n        postCategory: \"\",\n        posts: [],\n    };\n\n    addPost = (event) => {\n        event.preventDefault();\n        // Post Form Validation\n        const categoryInput = event.target.postCategory.value;\n        if (categoryInput !== \"null\") {\n            API.createPost({\n                body: event.target.postBody.value,\n                category: event.target.postCategory.value\n            })\n                .then((res) => {\n                    // Clear post form values\n                    this.setState({\n                        postBody: \"\",\n                        postCategory: \"\"\n                    });\n                    this.getAllPosts();\n                });\n        }\n        else alert(\"Category field required!\");\n    };\n\n    componentDidMount = () => {\n        if (!this.state.loggedIn) {\n            // Redirect to \"/\" if user not logged in\n            return <Redirect to=\"/\" />\n        }\n        this.getAllPosts();\n    };\n\n    getAllPosts = () => {\n        API.getAllPosts()\n            .then((res) => {\n                this.setState({\n                    posts: res.data\n                })\n            });\n    }\n\n    getPostsByCategory = (category) => {\n        if (category !== \"All\") {\n            API.getPostsByCat(category)\n                .then((res) => {\n                    if (res.data.length > 0) this.setState({ posts: res.data });\n                    else this.setState({ posts: [] });\n                });\n        } else {\n            this.getAllPosts();\n        }\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n        API.deletePost(event.target.id)\n            .then((res) => {\n                this.getAllPosts();\n            });\n    }\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    render() {\n\n        // Redirect to \"/\" if not logged in\n        if (!this.state.loggedIn) {\n            return <Redirect to=\"/\" />\n        }\n\n        // let user_id = this.props.user? this.props.user.id:\"\";\n        let loggedOnUserId = this.state.user.id;\n\n        return (\n\n            <div className=\"feedContainer\">\n                <CatButtons getPosts={this.getPostsByCategory} />\n                <Wrapper>\n                    <Row>\n                        {/* Feed header */}\n                        <Col size=\"md\">\n                            {!this.state.posts.length ?\n                                <p className=\"feedHeader\">No Stories...</p>\n                                :\n                                <p key=\"feedHeader\" className=\"feedHeader\">Stories...</p>\n                            }\n                        </Col>\n                    </Row>\n                    <Row>\n                        {/* Feed column */}\n                        <Col size=\"md\" span=\"8\">\n                            {!this.state.posts.length ?\n                                \"\"\n                                :\n                                (\n                                    this.state.posts.map((post) => {\n                                        return (\n                                            <Post\n                                                key={post.id}\n                                                id={post.id}\n                                                category={post.category}\n                                                comment={post.body}\n                                                image={post.User.imageUrl}\n                                                name={post.User.name}\n                                                timeStamp={post.updatedAt}\n                                                handleDelete={this.handleDelete}\n                                                userId={post.UserId}\n                                                user_id={loggedOnUserId}\n                                            />\n                                        );\n                                    }, this)\n                                )\n                            };\n\n                        </Col>\n                        {/* Post form column */}\n                        <Col size=\"md\" span=\"4\">\n                            <PostForm\n                                addPost={this.addPost}\n                                handleInputChange={this.handleInputChange}\n                                postBody={this.state.postBody}\n                                postCategory={this.state.postCategory}\n                            />\n                        </Col>\n                    </Row>\n                </Wrapper>\n            </div>\n\n        ); // End of return()\n\n    }; // End of render()\n\n}; // End of Feed()\n\nexport default Feed;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport SignUpForm from \"../../components/SignUpForm\";\nimport \"./Home.css\"; // Home Page CSS\n\nclass Home extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n    redirectTo: \"\",\n\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    occupation: \"\",\n    relationshipType: \"\",\n    location: \"\",\n    photoUrl: \"\",\n    bio: \"\"\n\n  }\n\n  componentDidMount = () => {\n    if (this.state.loggedIn) return <Redirect to=\"/feed\" />\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  };\n\n  handleSignUp = event => {\n    event.preventDefault();\n    // Location input validation\n    const locationInput = event.target.location.value;\n    if (locationInput !== \"null\") {\n      API.signUp({\n        name: event.target.name.value,\n        email: event.target.email.value,\n        password: event.target.password.value,\n        occupation: event.target.occupation.value,\n        relationshipType: event.target.relationshipType.value,\n        location: event.target.location.value,\n        imageUrl: event.target.photoUrl.value,\n        bio: event.target.bio.value\n      })\n        .then(() => this.setState({\n          redirectTo: \"/login\"\n        }));\n    }\n     else alert(\"Location field required!\");\n  };\n\n  render() {\n\n    if (this.state.redirectTo) return <Redirect to={this.state.redirectTo} />\n    if (this.state.loggedIn) return <Redirect to=\"/feed\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n          <Col size=\"md\" span=\"3\"></Col>\n          <Col size=\"md\" span=\"6\">\n            <SignUpForm\n              handleInputChange={this.handleInputChange}\n              handleSignUp={this.handleSignUp}\n              name={this.state.name}\n              email={this.state.email}\n              password={this.state.password}\n              occupation={this.state.occupation}\n              relationshipType={this.state.relationshipType}\n              location={this.state.location}\n              photoUrl={this.state.photoUrl}\n              bio={this.state.bio}\n            />\n          </Col>\n          <Col size=\"md\" span=\"3\"></Col>\n        </Row>\n      </Wrapper>\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of home.js class component\n\nexport default Home;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport API from \"./utils/API\";\nimport { NavBar } from \"./components\";\nimport { AddNewBldg, AddNewUser, Login } from \"./pages\"\n// import { About, Feed, Home, Login, Profile } from \"./pages\"\nimport \"./App.css\"; // Styling\n\n\nclass App extends React.Component {\n\n  state = {\n    loading: \"initial\",\n    loggedIn: false,\n    user: null\n  }\n\n  componentDidMount() {\n    this.setState({ loading: \"true\" });\n    API.getLoggedOnUser()\n      .then(res => {\n        if (res.data.user) {\n          this.setState({\n            loading: \"false\",\n            loggedIn: true,\n            user: res.data.user\n          });\n        }\n        else {\n          this.setState({\n            loading: \"false\",\n            loggedIn: false,\n            user: null\n          });\n        };\n      });\n  }\n\n  handleLogout = () => {\n    API.logout()\n      .then(() => {\n        this.setState({\n          user: null,\n          loggedIn: false\n        });\n        // Add a redirect to login page here\n      });\n  };\n\n  setUser = (user) => {\n    this.setState({\n      user,\n      loggedIn: true\n    });\n  };\n\n  render() {\n\n    // Forgo rendering until component mounts and loading is set to false\n    if (this.state.loading === 'initial') {\n      return <h2>Intializing...</h2>;\n    }\n\n    // Forgo rendering until component mounts and loading is set to false\n    if (this.state.loading === 'true') {\n      return <h2>Loading...</h2>;\n    }\n\n    return (\n\n      <Router>\n        <div>\n          <NavBar loggedIn={this.state.loggedIn} logout={this.handleLogout} />\n          {/* <Route exact path=\"/\" render={() => <Login setUser={this.setUser} loggedIn={this.state.loggedIn} user={this.state.user} />} /> */}\n          <Route exact path=\"/\" render={() => <Login loggedIn={this.state.loggedIn} user={this.state.user} />} />\n          <Route exact path=\"/buildings/addnewbldg\" render={() => <AddNewBldg loggedIn={this.state.loggedIn} user={this.state.user} />} />\n          <Route exact path=\"/users/addnewuser\" render={() => <AddNewUser loggedIn={this.state.loggedIn} user={this.state.user} />} />\n          <Route exact path=\"/login\" render={() => <Login setUser={this.setUser} loggedIn={this.state.loggedIn} user={this.state.user} />} />\n          <Route exact path=\"/users/addnewuser\" render={() => <AddNewUser loggedIn={this.state.loggedIn} user={this.state.user} />} />\n          <Route exact path=\"*\" render={() => <Login loggedIn={this.state.loggedIn} user={this.state.user} />} />\n          {/* <Route path='/feed' render={() => <Feed loggedIn={this.state.loggedIn} user={this.state.user} />} /> */}\n          {/* <Route exact path=\"/about\" render={() => <About loggedIn={this.state.loggedIn} user={this.state.user} />} /> */}\n          {/* <Route exact path=\"/home\" render={() => <Home loggedIn={this.state.loggedIn} user={this.state.user} />} /> */}\n          {/* <Route exact path=\"/profile\" render={() => <Profile loggedIn={this.state.loggedIn} user={this.state.user} />} /> */}\n        </div>\n      </Router>\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of App.js class component\n\nexport default App;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport CatButtons from \"../../components/CatButtons\";\nimport Post from \"../../components/Post\";\nimport PostForm2 from \"../../components/PostForm2\"\nimport UserInfo from \"../../components/UserInfo\";\nimport \"./Profile.css\"; // Profile Page CSS\n\nclass Profile extends React.Component {\n\n    state = {\n        loggedIn: this.props.loggedIn,\n        user: this.props.user,\n        postBody: \"\",\n        postCategory: \"\",\n        posts: []\n    };\n\n    addPost = (event) => {\n        event.preventDefault();\n        // Post Form Validation\n        const categoryInput = event.target.postCategory.value;\n        if (categoryInput !== \"null\") {\n            API.createPost({\n                body: event.target.postBody.value,\n                category: event.target.postCategory.value\n            })\n                .then((res) => {\n                    // Clear post form values\n                    this.setState({\n                        postBody: \"\",\n                        postCategory: \"\"\n                    });\n                    this.getUserPosts();\n                });\n        }\n        else alert(\"Category field required!\");\n    };\n\n    componentDidMount = () => {\n        if (!this.state.loggedIn) {\n            // Redirect to \"/\" if user NOT logged in\n            return <Redirect to=\"/\" />\n        }\n        this.getUserPosts();\n    };\n\n    getUserPostsByCategory = (category) => {\n        const userId = this.state.user.id;\n        if (category !== \"All\") {\n            API.getPostsByCat(category, userId)\n                .then((res) => {\n                    if (res.data.length > 0) this.setState({ posts: res.data });\n                    else this.setState({ posts: [] });\n                });\n        }\n        else this.getUserPosts();\n    };\n\n    getUserPosts = () => {\n        const userId = this.state.user.id;\n        API.getPostsByUser(userId)\n            .then((res) => {\n                if (res.data.length > 0) this.setState({ posts: res.data });\n                else this.setState({ posts: [] });\n            });\n    };\n\n    handleDelete = (event) => {\n        event.preventDefault();\n        API.deletePost(event.target.id)\n            .then((res) => {\n                this.getUserPosts();\n            });\n    }\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    render() {\n\n        // Redirect to \"/\" if user NOT logged in\n        if (!this.state.loggedIn) {\n            return <Redirect to=\"/\" />\n        }\n\n        // Destructuring logged on user\n        let { bio, email, id, imageUrl, location, name, occupation, relationshipType } = this.state.user;\n\n        return (\n\n            <div className=\"profileContainer\">\n                <CatButtons getPosts={this.getUserPostsByCategory} />\n                <Wrapper>\n                    <Row>\n\n                        {/* User Profile Column */}\n                        <Col size=\"md\" span=\"4\">\n                            <div className=\"userInfoContainer\">\n                                <UserInfo\n                                    bio={bio}\n                                    email={email}\n                                    image={imageUrl}\n                                    location={location}\n                                    name={name}\n                                    occupation={occupation}\n                                    relationshipType={relationshipType}\n                                />\n                            </div>\n                        </Col>\n\n                        {/* User Feed/Post Form Column */}\n                        <Col size=\"md\" span=\"8\">\n                            {!this.state.posts.length ?\n                                <p className=\"feedHeader\">No Stories...</p>\n                                :\n                                <p key=\"feedHeader\" className=\"feedHeader\">Your Stories...</p>\n                            }\n                            <div className=\"userPostForm\">\n                                <PostForm2\n                                    addPost={this.addPost}\n                                    handleInputChange={this.handleInputChange}\n                                    postBody={this.state.postBody}\n                                    postCategory={this.state.postCategory}\n                                />\n                            </div>\n                            <div className=\"userFeedContainer\">\n                                {!this.state.posts.length ?\n                                    \"\"\n                                    :\n                                    (\n                                        this.state.posts.map(function (post) {\n                                            return (\n                                                <Post\n                                                    key={post.id}\n                                                    id={post.id}\n                                                    category={post.category}\n                                                    comment={post.body}\n                                                    handleDelete={this.handleDelete}\n                                                    image={imageUrl}\n                                                    name={name}\n                                                    timeStamp={post.updatedAt}\n                                                    userId={post.UserId}\n                                                    user_id={id}\n                                                />\n                                            );\n                                        }, this)\n                                    )\n                                };\n                            </div>\n                        </Col>\n\n                    </Row>\n                </Wrapper>\n            </div>\n\n        ); // End of return()\n\n    }; // End of render()\n\n}; // End of class Profile\n\nexport default Profile;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}