{"version":3,"sources":["utils/API.js","components/NavBar/NavBar.js","components/BootstrapGrid/Wrapper.js","components/BootstrapGrid/Row.js","components/BootstrapGrid/Col.js","pages/AddNewBldg/AddNewBldg.js","pages/AddNewFloor/AddNewFloor.js","pages/AddNewRoom/AddNewRoom.js","pages/AddNewUser/AddNewUser.js","pages/Dashboard/Dashboard.js","pages/Login/Login.js","App.js","registerServiceWorker.js","index.js"],"names":["API","addNewBldg","newBldg","axios","post","addNewFloor","newFloor","addNewRoom","newRoom","addNewUser","newUser","getAllBldgs","get","getAllData","getFloorsInBldg","bldgId","concat","getOneBldg","getOneFloor","floorId","getRoomsInFloor","getLoggedOnUser","login","user","logout","NavBar","react_default","a","createElement","className","id","src","Logo","imageUrl","alt","name","Wrapper","_ref","children","Row","Col","size","_ref$span","span","offset","AddNewBldg","state","loggedIn","_this","props","buildingList","location","states","componentDidMount","getBuildingList","duplicateCheck","list","i","length","then","results","console","log","setState","data","handleInputChange","event","_event$target","target","value","Object","defineProperty","handleLogOut","history","push","handleNewBldg","preventDefault","newName","newLocation","titleCase","alert","this","BootstrapGrid_Wrapper","BootstrapGrid_Row","BootstrapGrid_Col","Link","to","onClick","onSubmit","htmlFor","placeholder","onChange","type","required","disabled","map","stateName","key","building","pathname","Redirect","React","Component","AddNewFloor","buildingId","params","buildingName","floorList","floorName","getActiveBuilding","getFloorList","newFloorName","handleNewFloor","BuildingId","_this2","readOnly","style","showFields","floor","AddNewRoom","roomList","roomName","getActiveFloor","getRoomList","newRoomName","handleNewRoom","FloorId","room","AddNewUser","title","userImageUrl","email","password","handleNewUser","newTitle","newUserImageUrl","newEmail","newPassword","Dashboard","buildings","Floors","j","Rooms","Login","handleLogin","res","setUser","App","loading","str","toLowerCase","split","word","replace","toUpperCase","join","_this3","BrowserRouter","components_NavBar_NavBar","Switch","Route","exact","path","render","pages_Login_Login","pages_AddNewBldg_AddNewBldg","_ref2","match","pages_AddNewFloor_AddNewFloor","_ref3","pages_AddNewRoom_AddNewRoom","_ref4","pages_Dashboard_Dashboard","_ref5","pages_AddNewUser_AddNewUser","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.aa9cc357.chunk.js","sourcesContent":["import axios from \"axios\"; // Promise-based HTTP client\n\nexport default {\n\n  // API Methods (/api)\n  addNewBldg: (newBldg) => { return axios.post(\"/api/buildings/createnewbldg\", newBldg); },\n  addNewFloor: (newFloor) => { return axios.post(\"/api/buildings/floors/createnewfloor\", newFloor); },\n  addNewRoom: (newRoom) => { return axios.post(\"/api/buildings/floors/rooms/createnewroom\", newRoom); },\n  addNewUser: (newUser) => { return axios.post(\"/api/users/createnewuser\", newUser); },\n  getAllBldgs: () => { return axios.get(\"/api/buildings/listall\"); },\n  getAllData: () => { return axios.get(\"/api/getalldata\"); },\n  getFloorsInBldg: (bldgId) => { return axios.get(`/api/buildings/floors/listall/${bldgId}`); },\n  getOneBldg: (bldgId) => { return axios.get(`/api/buildings/findone/${bldgId}`); },\n  getOneFloor: (floorId) => { return axios.get(`/api/buildings/floors/findone/${floorId}`); },\n  getRoomsInFloor: (floorId) => { return axios.get(`/api/buildings/floors/listrooms/${floorId}`); },\n\n  // User Authentication Methods (/auth)\n  getLoggedOnUser: () => { return axios.get(\"/auth/getUser\"); },\n  login: (user) => { return axios.post(\"/auth/login\", user) },\n  logout: () => { return axios.get(\"/auth/logout\"); }\n\n};","import React from 'react';\nimport \"./NavBar.css\"; // Styling\nimport Logo from \"./Logo.json\"; // AMS CAD Logo\n\nconst NavBar = () => {\n\n  return (\n\n    <nav className=\"navbar navbar-expand-lg\" >\n\n      < div className=\"navBarCoHeader\" >\n        <img id=\"navBarLogoText\" src={Logo[0].imageUrl} alt={Logo[0].name} />\n      </div >\n\n      <div className=\"navBarAppHeader\">\n        <h3 id=\"navBarAppText\">Facilities Management System</h3>\n      </div>\n\n    </nav >\n\n  ); // End of return()\n\n}; // End of NavBar()\n\nexport default NavBar;","import React from \"react\";\n\nconst Wrapper = ({children}) => (\n  <div className=\"container\">\n    {children}\n  </div>\n);\n\nexport default Wrapper;","import React from 'react'\n\nconst Row = ({children}) => (\n  <div className=\"row\">\n    {children}\n  </div>\n);\n\nexport default Row;","import React from 'react'\n\nconst Col = ({children, size, span = 12, offset}) => {\n  let className = size ? `col-${size}-${span}` : `col-${span}`;\n\n  className = offset ? `${className} offset-${offset}` : className;\n\n  return (\n    <div className={className}>\n      {children}\n    </div>\n  );\n}\n\nexport default Col;","import React from \"react\";\nimport {\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport {\n  Col,\n  Row,\n  Wrapper\n} from \"../../components/BootstrapGrid\";\nimport \"./AddNewBldg.css\" // Styling\n\nclass AddNewBldg extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    buildingList: [],\n    name: \"\",\n    location: \"\",\n    states: ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia',\n      'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland',\n      'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\n      'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina',\n      'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\n\n  }\n\n  componentDidMount = () => {\n    if (this.state.loggedIn)\n      this.getBuildingList();\n  }\n\n  duplicateCheck = (name, location) => {\n    let list = this.state.buildingList;\n    for (let i = 0; i < list.length; i++) {\n      if (name === list[i].name && location === list[i].location) {\n        return true;\n      };\n    };\n    return false;\n  }\n\n  getBuildingList = () => {\n    API.getAllBldgs()\n      .then((results) => {\n        console.log(results);\n        this.setState({ buildingList: results.data });\n      });\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleLogOut = () => {\n    API.logout()\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n  };\n\n  handleNewBldg = event => {\n    event.preventDefault();\n    let newName = event.target.name.value;\n    const newLocation = event.target.location.value;\n    // Input validation and submission\n    if (newName && newLocation) {\n      newName = this.props.titleCase(newName);\n      let result = this.duplicateCheck(newName, newLocation);\n      if (!result) {\n        API.addNewBldg({\n          name: newName,\n          location: newLocation\n        })\n          .then(() => {\n            this.getBuildingList();\n            alert(\"New building added successfully!\");\n            this.setState({\n              name: \"\",\n              location: \"\"\n            });\n          });\n      }\n      else alert(\"Building already exists! Please use a different name and/or location.\");\n    }\n    else alert(\"All fields required!\");\n  };\n\n  render() {\n\n    // Authentication redirect\n    if (!this.state.loggedIn)\n      return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n\n          <Col size=\"md\" span=\"12\">\n            <div className=\"pageHeaderContainer\">\n              <div className=\"pageHeaderText\">\n                <h3>Building Administration - Add New Building</h3>\n              </div>\n              <div className=\"pageHeaderNavBtnContainer\">\n                <Link to=\"/dashboard\">\n                  <button className=\"pageHeaderNavBtn\">Back To Dashboard</button>\n                </Link>\n                <button className=\"pageHeaderNavBtn\" onClick={this.handleLogOut}>Log Out</button>\n              </div>\n\n              <hr className=\"pageHeaderHr\" />\n            </div>\n          </Col>\n\n        </Row>\n\n        <Row>\n\n          <Col size=\"md\" span=\"4\">\n            <div className=\"genFormSettings\">\n              <form onSubmit={this.handleNewBldg}>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Building Name</label>\n                  <input name=\"name\" className=\"capitalized form-control\" placeholder=\"Building Name...\" onChange={this.handleInputChange} value={this.state.name} type=\"name\" required />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"location\">Location</label>\n                  <select name=\"location\" id=\"locationInput\" className=\"form-control selectStyling\" onChange={this.handleInputChange} value={this.state.location} type=\"location\" >\n                    <option value=\"\" disabled>Location (US State)...</option>\n                    {\n                      this.state.states.map((stateName) => (\n                        <option key={stateName} value={stateName}>{stateName}</option>\n                      ))\n                    }\n                  </select>\n                </div>\n\n                <div>\n                  <button className=\"genAppBtn\" type=\"submit\">ADD NEW BLDG</button>\n                </div>\n\n              </form>\n            </div>\n          </Col>\n\n          <Col size=\"md\" span=\"8\">\n            <div id=\"buildingDisplayContainer\">\n\n              <div id=\"buildingDisplayHeader\">Buildings</div>\n              <hr id=\"buildingDisplayHr\" />\n\n              <div id=\"buildingDisplay\">\n                {\n                  this.state.buildingList.length === 0 ?\n                    \"* No Buildings Have Been Added\"\n                    :\n                    this.state.buildingList.map((building) => (\n                      <Link\n                        key={building.id}\n                        to={{ pathname: `/buildings/floors/addnewfloor/${building.id}` }}\n                      >\n                        <button className=\"buildingDisplayBtn\">\n                          {building.name}, {building.location}\n                        </button>\n                      </Link>\n                    ))\n                }\n              </div>\n\n            </div>\n          </Col>\n\n        </Row>\n      </Wrapper >\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of AddNewBldg class component\n\nexport default AddNewBldg;","import React from \"react\";\nimport {\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport {\n  Col,\n  Row,\n  Wrapper\n} from \"../../components/BootstrapGrid\";\nimport \"./AddNewFloor.css\" // Styling\n\nclass AddNewFloor extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    building: {},\n    buildingId: this.props.params.bldgId,\n    buildingName: \"\",\n    floorList: [],\n    floorName: \"\"\n\n  }\n\n  componentDidMount = () => {\n    if (this.state.loggedIn) {\n      this.getActiveBuilding(this.state.buildingId);\n      this.getFloorList(this.state.buildingId);\n    }\n  }\n\n  duplicateCheck = (newFloorName) => {\n    let list = this.state.floorList;\n    for (let i = 0; i < list.length; i++) {\n      if (newFloorName === list[i].name) return true;\n    };\n    return false;\n  }\n\n  getActiveBuilding = (bldgId) => {\n    API.getOneBldg(bldgId)\n      .then((results) => {\n        console.log(results);\n        this.setState({\n          building: results.data,\n          buildingName: results.data.name\n        });\n      });\n  };\n\n  getFloorList = (bldgId) => {\n    API.getFloorsInBldg(bldgId)\n      .then((results) => {\n        console.log(results);\n        this.setState({ floorList: results.data });\n      });\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleLogOut = () => {\n    API.logout()\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n  };\n\n  handleNewFloor = event => {\n    event.preventDefault();\n    let newFloorName = event.target.floorName.value;\n    // Input validation and submission\n    if (newFloorName) {\n      newFloorName = this.props.titleCase(newFloorName);\n      let result = this.duplicateCheck(newFloorName);\n      if (!result) {\n        API.addNewFloor({\n          BuildingId: this.state.buildingId,\n          name: newFloorName,\n        })\n          .then(() => {\n            this.getFloorList(this.state.buildingId);\n            alert(\"New floor added successfully!\");\n            this.setState({ floorName: \"\" });\n          });\n      }\n      else alert(\"Floor name already exists! Please use a different name!\");\n    }\n    else alert(\"Floor name required! Please enter a floor name.\");\n  };\n\n  render() {\n\n    // Authentication redirect\n    if (!this.state.loggedIn)\n      return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n\n          <Col size=\"md\" span=\"12\">\n            <div className=\"pageHeaderContainer\">\n              <div className=\"pageHeaderText\">\n                <h3>Building Administration - Add New Floor</h3>\n              </div>\n              <div className=\"pageHeaderNavBtnContainer\">\n                <Link to=\"/buildings/addnewbldg\">\n                  <button className=\"pageHeaderNavBtn\">Back To Buildings</button>\n                </Link>\n                <Link to=\"/dashboard\">\n                  <button className=\"pageHeaderNavBtn\">Back To Dashboard</button>\n                </Link>\n                <button className=\"pageHeaderNavBtn\" onClick={this.handleLogOut}>Log Out</button>\n              </div>\n              <hr className=\"pageHeaderHr\" />\n            </div>\n          </Col>\n\n        </Row>\n\n        <Row>\n\n          <Col size=\"md\" span=\"4\">\n            <div className=\"genFormSettings\">\n              <form onSubmit={this.handleNewFloor}>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"buildingName\">Building Name</label>\n                  <input name=\"buildingName\" className=\"form-control\" value={this.state.buildingName} type=\"buildingName\" readOnly></input>\n                </div>\n\n                <div className=\"form-group\" style={this.state.showFields}>\n                  <label htmlFor=\"floorName\">Floor Name</label>\n                  <input name=\"floorName\" className=\"capitalized form-control\" placeholder=\"Floor Name...\" onChange={this.handleInputChange} value={this.state.floorName} type=\"floorName\" />\n                </div>\n\n                <div>\n                  <button className=\"genAppBtn\" type=\"submit\">ADD NEW FLOOR</button>\n                </div>\n\n              </form>\n            </div>\n          </Col>\n\n          <Col size=\"md\" span=\"8\">\n            <div id=\"floorDisplay\">\n\n              <div id=\"floorDisplayHeader\">\n                {this.state.buildingName} > Floors\n              </div>\n\n              <hr id=\"floorDisplayHr\" />\n\n              <div id=\"floorData\">\n                {\n                  this.state.floorList.length === 0 ?\n                    \"* No Floors Have Been Added\"\n                    :\n                    this.state.floorList.map((floor) => (\n                      <Link\n                        key={floor.id}\n                        to={{ pathname: `/buildings/floors/rooms/addnewroom/${this.state.buildingId}/${floor.id}` }}\n                      >\n                        <button className=\"floorDisplayBtn\">{floor.name}</button>\n                      </Link>\n                    ))\n                }\n              </div>\n\n            </div>\n          </Col>\n\n        </Row>\n      </Wrapper >\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of AddNewFloor class component\n\nexport default AddNewFloor;","import React from \"react\";\nimport {\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport {\n  Col,\n  Row,\n  Wrapper\n} from \"../../components/BootstrapGrid\";\nimport \"./AddNewRoom.css\" // Styling\n\nclass AddNewRoom extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    buildingId: this.props.params.bldgId,\n    floor: {},\n    floorId: this.props.params.floorId,\n    floorName: \"\",\n    building: {},\n    buildingName: \"\",\n    roomList: [],\n    roomName: \"\"\n\n  }\n\n  componentDidMount = () => {\n    if (this.state.loggedIn) {\n      this.getActiveBuilding(this.state.buildingId);\n      this.getActiveFloor(this.state.floorId);\n      this.getRoomList(this.state.floorId);\n    }\n  };\n\n  duplicateCheck = (newRoomName) => {\n    let list = this.state.roomList;\n    for (let i = 0; i < list.length; i++) {\n      if (newRoomName === list[i].name)\n        return true;\n    };\n    return false;\n  }\n\n  getActiveBuilding = (bldgId) => {\n    API.getOneBldg(bldgId)\n      .then((results) => {\n        console.log(results);\n        this.setState({\n          building: results.data,\n          buildingName: results.data.name\n        });\n      });\n  };\n\n  getActiveFloor = (floorId) => {\n    API.getOneFloor(floorId)\n      .then((results) => {\n        console.log(results);\n        this.setState({\n          floor: results.data,\n          floorName: results.data.name\n        });\n      });\n  };\n\n  getRoomList = (floorId) => {\n    API.getRoomsInFloor(floorId)\n      .then((results) => {\n        console.log(results);\n        this.setState({ roomList: results.data });\n      });\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleLogOut = () => {\n    API.logout()\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n  };\n\n  handleNewRoom = event => {\n    event.preventDefault();\n    let newRoomName = event.target.roomName.value;\n    // Input validation and submission\n    if (newRoomName) {\n      newRoomName = this.props.titleCase(newRoomName);\n      let result = this.duplicateCheck(newRoomName);\n      if (!result) {\n        API.addNewRoom({\n          FloorId: this.state.floorId,\n          name: newRoomName,\n        })\n          .then(() => {\n            this.getRoomList(this.state.floorId);\n            alert(\"New room added successfully!\");\n            this.setState({ roomName: \"\" });\n          });\n      }\n      else alert(\"Floor name already exists! Please use a different name!\");\n    }\n    else alert(\"Room name required! Please enter a room name.\")\n  };\n\n  render() {\n\n    // Authentication redirect\n    if (!this.state.loggedIn)\n      return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n\n          <Col size=\"md\" span=\"12\">\n            <div className=\"pageHeaderContainer\">\n              <div className=\"pageHeaderText\">\n                <h3>Building Administration - Add New Room</h3>\n              </div>\n              <div className=\"pageHeaderNavBtnContainer\">\n                <Link\n                  to={{ pathname: `/buildings/floors/addnewfloor/${this.state.buildingId}` }}\n                >\n                  <button className=\"pageHeaderNavBtn\">Back To Floors</button>\n                </Link>\n                <Link to=\"/dashboard\">\n                  <button className=\"pageHeaderNavBtn\">Back To Dashboard</button>\n                </Link>\n                <button className=\"pageHeaderNavBtn\" onClick={this.handleLogOut}>Log Out</button>\n              </div>\n              <hr className=\"pageHeaderHr\" />\n            </div>\n          </Col>\n\n        </Row>\n\n        <Row>\n\n          <Col size=\"md\" span=\"4\">\n            <div className=\"genFormSettings\">\n              <form onSubmit={this.handleNewRoom}>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"buildingName\">Building Name</label>\n                  <input name=\"buildingName\" className=\"form-control\" value={this.state.buildingName} type=\"buildingName\" readOnly></input>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"floorName\">Floor Name</label>\n                  <input name=\"floorName\" className=\"form-control\" value={this.state.floorName} type=\"floorName\" readOnly></input>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"roomName\">Room Name</label>\n                  <input name=\"roomName\" className=\"capitalized form-control\" placeholder=\"Room Name...\" onChange={this.handleInputChange} value={this.state.roomName} type=\"roomName\" />\n                </div>\n\n                <div>\n                  <button className=\"genAppBtn\" type=\"submit\">ADD NEW ROOM</button>\n                </div>\n\n              </form>\n            </div>\n          </Col>\n\n          <Col size=\"md\" span=\"8\">\n            <div id=\"roomDisplay\">\n\n              <div id=\"roomDisplayHeader\">\n                {this.state.buildingName} > Floor: {this.state.floorName} > Rooms\n              </div>\n\n              <hr id=\"roomDisplayHr\" />\n\n              <div id=\"roomData\">\n                {\n                  this.state.roomList.length === 0 ?\n                    \"* No Rooms Have Been Added\"\n                    :\n                    this.state.roomList.map((room) => (\n                      <button key={room.id} className=\"roomDisplayBtn\">{room.name}</button>\n                    ))\n                }\n              </div>\n\n            </div>\n          </Col>\n\n        </Row>\n      </Wrapper >\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of AddNewRoom class component\n\nexport default AddNewRoom;","import React from \"react\";\nimport {\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport {\n  Col,\n  Row,\n  Wrapper\n} from \"../../components/BootstrapGrid\";\n\nclass AddNewUser extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    name: \"\",\n    title: \"\",\n    userImageUrl: \"\",\n    email: \"\",\n    password: \"\"\n\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  };\n\n  handleLogOut = () => {\n    API.logout()\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n  };\n\n  handleNewUser = event => {\n    event.preventDefault();\n    let newName = event.target.name.value;\n    let newTitle = event.target.title.value;\n    const newUserImageUrl = event.target.userImageUrl.value;\n    const newEmail = event.target.email.value;\n    const newPassword = event.target.password.value;\n\n    // Input validation\n    if (newName && newTitle && newUserImageUrl && newEmail && newPassword) {\n      newName = this.props.titleCase(newName);\n      newTitle = this.props.titleCase(newTitle);\n      API.addNewUser({\n        name: newName,\n        title: newTitle,\n        userImageUrl: newUserImageUrl,\n        email: newEmail,\n        password: newPassword\n      })\n        .then(() => {\n          alert(\"New user added successfully!\");\n          this.setState({\n            name: \"\",\n            title: \"\",\n            userImageUrl: \"\",\n            email: \"\",\n            password: \"\"\n          });\n        });\n    }\n    else alert(\"All fields required!\");\n  };\n\n  render() {\n\n    // Authentication redirect\n    if (!this.state.loggedIn)\n      return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n\n          <Col size=\"md\" span=\"12\">\n            <div className=\"pageHeaderContainer\">\n              <div className=\"pageHeaderText\">\n                <h3>User Administration - Add New User</h3>\n              </div>\n              <div className=\"pageHeaderNavBtnContainer\">\n                <Link to=\"/dashboard\">\n                  <button className=\"pageHeaderNavBtn\">Back To Dashboard</button>\n                </Link>\n                <button className=\"pageHeaderNavBtn\" onClick={this.handleLogOut}>Log Out</button>\n              </div>\n              <hr className=\"pageHeaderHr\" />\n            </div>\n          </Col>\n\n        </Row>\n\n        <Row>\n\n          <Col size=\"md\" span=\"4\">\n            <div className=\"genFormSettings\">\n              <form onSubmit={this.handleNewUser}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input name=\"name\" className=\"capitalized form-control\" placeholder=\"Name...\" onChange={this.handleInputChange} value={this.state.name} type=\"name\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Title</label>\n                  <input name=\"title\" className=\"capitalized form-control\" placeholder=\"Title...\" onChange={this.handleInputChange} value={this.state.title} type=\"title\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"userImageUrl\">Profile Image Url</label>\n                  <input name=\"userImageUrl\" className=\"form-control\" placeholder=\"Profile Image Url...\" onChange={this.handleInputChange} value={this.state.userImageUrl} type=\"userImageUrl\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">E-mail</label>\n                  <input name=\"email\" className=\"form-control\" placeholder=\"Email...\" onChange={this.handleInputChange} value={this.state.email} type=\"email\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input name=\"password\" className=\"form-control\" placeholder=\"Password...\" onChange={this.handleInputChange} value={this.state.password} type=\"password\" required />\n                </div>\n                <div>\n                  <button className=\"genAppBtn\" type=\"submit\">ADD NEW USER</button>\n                </div>\n              </form>\n            </div>\n          </Col>\n\n        </Row>\n      </Wrapper>\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of AddNewUser class component\n\nexport default AddNewUser;","import React from \"react\";\nimport {\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport {\n  Col,\n  Row,\n  Wrapper\n} from \"../../components/BootstrapGrid\";\nimport \"./Dashboard.css\" // Styling\n\nclass Dashboard extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    buildings: []\n\n  }\n\n  componentDidMount = () => {\n    if (this.state.loggedIn)\n      this.getAllData();\n  }\n\n  getAllData = () => {\n    API.getAllData()\n      .then((results) => {\n        this.setState({ buildings: results.data });\n        console.log(this.state.buildings);\n      });\n  };\n\n  handleLogOut = () => {\n    API.logout()\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n  };\n\n  render() {\n\n    // Authentication redirect\n    if (!this.state.loggedIn)\n      return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n\n          <Col size=\"md\" span=\"12\">\n            <div className=\"pageHeaderContainer\">\n              <div className=\"pageHeaderText\">\n                <h3>Building Administration - Dashboard</h3>\n              </div>\n              <div className=\"pageHeaderNavBtnContainer\">\n                <Link to=\"/users/addnewuser\">\n                  <button className=\"pageHeaderNavBtn\">Add New User</button>\n                </Link>\n                <Link to=\"/buildings/addnewbldg\">\n                  <button className=\"pageHeaderNavBtn\">Add New Building</button>\n                </Link>\n                <button className=\"pageHeaderNavBtn\" onClick={this.handleLogOut}>Log Out</button>\n              </div>\n\n              <hr className=\"pageHeaderHr\" />\n            </div>\n          </Col>\n\n        </Row>\n\n        <Row>\n\n          <Col size=\"md\" span=\"12\">\n\n            <div className=\"dashDataContainer\">\n              {\n                this.state.buildings.map((building, i) => {\n                  return (\n                    <div key={building.id} className=\"dashBldgContainer\">\n                      <div className=\"dashBldgName\">\n                        <Link\n                          to={{ pathname: `/buildings/floors/addnewfloor/${building.id}` }}\n                        >\n                          {building.name}, {building.location}\n                        </Link>\n                      </div>\n                      {/* <hr className=\"dashDataHr\" /> */}\n                      {\n                        this.state.buildings[i].Floors.length === 0 ?\n                          <div className=\"dashFloorContainer\">\n                            <div className=\"dashFloorName\">\n                              <Link to={{ pathname: `/buildings/floors/addnewfloor/${building.id}` }} >\n                                Click here to add floors\n                        </Link>\n                            </div>\n                          </div>\n                          :\n                          this.state.buildings[i].Floors.map((floor, j) => {\n                            return (\n                              <div key={floor.id} className=\"dashFloorContainer\">\n                                <div className=\"dashFloorName\">\n                                  <Link\n                                    to={{ pathname: `/buildings/floors/rooms/addnewroom/${building.id}/${floor.id}` }}\n                                  >\n                                    Floor: {floor.name}\n                                  </Link>\n                                </div>\n                                <div className=\"dashRoomContainer\">\n                                  {\n                                    this.state.buildings[i].Floors[j].Rooms.length === 0 ?\n                                      <div className=\"dashRoomName\">\n                                        <Link to={{ pathname: `/buildings/floors/rooms/addnewroom/${building.id}/${floor.id}` }} >\n                                          Click here to add rooms\n                                  </Link>\n                                      </div>\n                                      :\n                                      this.state.buildings[i].Floors[j].Rooms.map((room) => {\n                                        return (\n                                          <div key={room.id} className=\"dashRoomName\">{room.name}</div>\n                                        )\n                                      })\n                                  }\n                                </div>\n                              </div>\n                            )\n                          })\n                      }\n                    </div>\n                  )\n                })\n              }\n            </div>\n\n          </Col>\n\n        </Row>\n      </Wrapper >\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of Dashboard class component\n\nexport default Dashboard;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Col,\n  Row,\n  Wrapper\n} from \"../../components/BootstrapGrid\";\nimport API from \"../../utils/API\";\nimport \"./Login.css\"; // Styling\n\nclass Login extends React.Component {\n\n  state = {\n\n    email: \"\",\n    password: \"\",\n    loggedIn: false\n\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  };\n\n  handleLogin = event => {\n    event.preventDefault();\n    API.login({\n      email: this.state.email,\n      password: this.state.password\n    })\n      .then((res) => {\n        this.props.setUser(res.data.user);\n        this.setState({ loggedIn: true });\n      });\n  };\n\n  render() {\n\n    // Authentication redirect\n    if (this.state.loggedIn) \n      return <Redirect to=\"/dashboard\" />    \n\n    return (\n\n      <Wrapper>\n        <Row>\n\n          <Col size=\"md\" span=\"4\"></Col>\n\n          <Col size=\"md\" span=\"4\">\n            <div>\n              <h3 id=\"loginFormHeader\">Welcome to AMS</h3>\n              <form onSubmit={this.handleLogin}>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input name=\"email\" className=\"form-control\" type=\"text\" value={this.state.email} onChange={this.handleInputChange} />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input name=\"password\" className=\"form-control\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} />\n                </div>\n\n                <button className=\"loginBtn genAppBtn\" type=\"submit\">LOGIN</button>\n\n              </form>\n            </div>\n          </Col>\n\n        </Row>\n      </Wrapper>\n\n    ); // End of Return\n\n  }; // End of render()\n\n}; // End of Login class component\n\nexport default Login;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport API from \"./utils/API\";\nimport { NavBar } from \"./components\";\nimport {\n  AddNewBldg,\n  AddNewFloor,\n  AddNewRoom,\n  AddNewUser,\n  Dashboard,\n  Login\n} from \"./pages\"\nimport \"./App.css\"; // Styling\n\nclass App extends React.Component {\n\n  state = {\n\n    loading: \"initial\",\n    loggedIn: false,\n    user: null,\n\n    buildings: []\n\n  }\n\n  componentDidMount() {\n    // Maintaining user session\n    this.setState({ loading: \"true\" });\n    API.getLoggedOnUser()\n      .then(res => {\n        if (res.data.user) {\n          this.setState({\n            loading: \"false\",\n            loggedIn: true,\n            user: res.data.user\n          });\n        }\n        else {\n          this.setState({\n            loading: \"false\",\n            loggedIn: false,\n            user: null\n          });\n        };\n      });\n  };\n\n  setUser = (user) => {\n    this.setState({\n      user,\n      loggedIn: true\n    });\n  };\n\n  titleCase = (str) => {\n    return str.toLowerCase()\n      .split(' ')\n      .map(function (word) {\n        return word.replace(word[0], word[0].toUpperCase());\n      })\n      .join(' ');\n  }\n\n  render() {\n\n    // Prevents rendering until user info is retrieved\n    if (this.state.loading === 'initial') {\n      return <h2>Intializing...</h2>;\n    }\n\n    // Prevents rendering until user info is retrieved\n    if (this.state.loading === 'true') {\n      return <h2>Loading...</h2>;\n    }\n\n    return (\n\n      <Router>\n\n        <div>\n          <NavBar />\n          <Switch>\n            <Route\n              exact path=\"/\"\n              render={() =>\n                <Login\n                  loggedIn={this.state.loggedIn}\n                  user={this.state.user}\n                  setUser={this.setUser}\n                />}\n            />\n            <Route\n              exact path=\"/buildings/addnewbldg\"\n              render={({ history }) =>\n                <AddNewBldg\n                  loggedIn={this.state.loggedIn}\n                  user={this.state.user}\n                  history={history}\n                  titleCase={this.titleCase}\n                />}\n            />\n            <Route\n              exact path=\"/buildings/floors/addnewfloor/:bldgId\"\n              render={({ history, match }) =>\n                <AddNewFloor\n                  loggedIn={this.state.loggedIn}\n                  user={this.state.user}\n                  history={history}\n                  params={match.params}\n                  titleCase={this.titleCase}\n                />}\n            />\n            <Route\n              exact path=\"/buildings/floors/rooms/addnewroom/:bldgId/:floorId\"\n              render={({ history, match }) =>\n                <AddNewRoom\n                  loggedIn={this.state.loggedIn}\n                  user={this.state.user}\n                  history={history}\n                  params={match.params}\n                  titleCase={this.titleCase}\n                />}\n            />\n            <Route\n              exact path=\"/dashboard\"\n              render={({ history }) =>\n                <Dashboard\n                  loggedIn={this.state.loggedIn}\n                  user={this.state.user}\n                  history={history}\n                />}\n            />\n            <Route\n              exact path=\"/users/addnewuser\"\n              render={({ history }) =>\n                <AddNewUser\n                  loggedIn={this.state.loggedIn}\n                  user={this.state.user}\n                  history={history}\n                  titleCase={this.titleCase}\n                />}\n            />\n            {/* All non-matching routes are redirected to dashboard */}\n            <Route\n              render={() =>\n                <Redirect to=\"/dashboard\" />\n              }\n            />\n          </Switch>\n        </div>\n\n      </Router>\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of App class component\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}