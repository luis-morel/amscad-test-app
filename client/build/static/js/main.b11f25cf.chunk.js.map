{"version":3,"sources":["components/Twitter/fb.png","components/Twitter/gith.png","components/Twitter/insta.png","components/Twitter/twit.png","utils/API.js","components/CatButtons/CatButtons.js","components/NavBar/NavBar.js","components/BootstrapGrid/Wrapper.js","components/BootstrapGrid/Row.js","components/BootstrapGrid/Col.js","components/Post/Post.js","components/PostForm/PostForm.js","components/PostForm2/PostForm2.js","components/SignUpForm/SignUpForm.js","components/UserInfo/UserInfo.js","pages/AddNewBldg/AddNewBldg.js","pages/AddNewFloor/AddNewFloor.js","pages/AddNewRoom/AddNewRoom.js","pages/AddNewUser/AddNewUser.js","pages/Login/Login.js","pages/Feed/Feed.js","pages/Home/Home.js","App.js","pages/Profile/Profile.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","API","addNewBldg","newBldg","axios","post","addNewFloor","newFloor","addNewRoom","newRoom","addNewUser","newUser","getAllBldgs","get","getFloorsInBldg","bldgId","concat","getOneBldg","getOneFloor","floorId","getRoomsInFloor","getLoggedOnUser","login","user","logout","CatButtons","_ref","getPosts","react_default","a","createElement","id","className","map","category","key","onClick","NavBar","src","Logo","imageUrl","alt","name","Wrapper","children","Row","Col","size","_ref$span","span","offset","Post","image","timeStamp","comment","handleDelete","userId","user_id","time","dateObj","Date","weekDay","getDay","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minutes","getMinutes","meridian","formatTimeStamp","onSubmit","BootstrapGrid_Row","BootstrapGrid_Col","PostForm","addPost","handleInputChange","postBody","postCategory","value","onChange","placeholder","rows","required","disabled","defaultValue","type","PostForm2","SignUpForm","handleSignUp","email","password","occupation","relationshipType","location","photoUrl","bio","htmlFor","UserInfo","AddNewBldg","state","loggedIn","_this","props","buildingList","states","componentDidMount","getBuildingList","duplicateCheck","list","i","length","then","results","console","log","JSON","stringify","setState","data","event","_event$target","target","Object","defineProperty","handleNewBldg","preventDefault","newName","newLocation","titleCase","alert","BootstrapGrid_Wrapper","this","stateName","building","Link","to","pathname","React","Component","AddNewFloor","buildingId","params","buildingName","floorList","floorName","getActiveBuilding","getFloorList","newFloorName","handleNewFloor","BuildingId","_this2","readOnly","style","showFields","floor","AddNewRoom","roomList","roomName","getActiveFloor","getRoomList","newRoomName","handleNewRoom","FloorId","room","AddNewUser","title","userImageUrl","handleNewUser","newTitle","newUserImageUrl","newEmail","newPassword","Login","redirectTo","componentWillMount","handleLogin","res","setUser","Redirect","App","loading","handleLogout","str","toLowerCase","split","word","replace","toUpperCase","join","BrowserRouter","components_NavBar_NavBar","Route","exact","path","render","pages_Login_Login","pages_AddNewBldg_AddNewBldg","match","pages_AddNewFloor_AddNewFloor","_ref2","pages_AddNewRoom_AddNewRoom","pages_AddNewUser_AddNewUser","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b11f25cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fb.73cf2981.png\";","module.exports = __webpack_public_path__ + \"static/media/gith.dd24e5cb.png\";","module.exports = __webpack_public_path__ + \"static/media/insta.a6179871.png\";","module.exports = __webpack_public_path__ + \"static/media/twit.2451ce30.png\";","import axios from \"axios\"; // Promise-based HTTP client\n\nexport default {\n\n  // API Methods (/api)\n  addNewBldg: (newBldg) => { return axios.post(\"/api/buildings/createnewbldg\", newBldg); },\n  addNewFloor: (newFloor) => { return axios.post(\"/api/buildings/floors/createnewfloor\", newFloor); },\n  addNewRoom: (newRoom) => { return axios.post(\"/api/buildings/floors/rooms/createnewroom\", newRoom); },\n  addNewUser: (newUser) => { return axios.post(\"/api/users/createnewuser\", newUser); },\n  getAllBldgs: () => { return axios.get(\"/api/buildings/listall\"); },\n  getFloorsInBldg: (bldgId) => { return axios.get(`/api/buildings/floors/listall/${bldgId}`); },\n  getOneBldg: (bldgId) => { return axios.get(`/api/buildings/findone/${bldgId}`); },\n  getOneFloor: (floorId) => { return axios.get(`/api/buildings/floors/findone/${floorId}`); },\n  getRoomsInFloor: (floorId) => { return axios.get(`/api/buildings/floors/listrooms/${floorId}`); },\n\n  // User Authentication Methods (/auth)\n  getLoggedOnUser: () => { return axios.get(\"/auth/getuser\"); },\n  login: (user) => { return axios.post(\"/auth/login\", user) },\n  logout: () => { return axios.get(\"/auth/logout\"); }\n\n};","import React from \"react\";\nimport \"./CatButtons.css\"; // Category Button CSS\n\nconst CatButtons = ({ getPosts }) => {\n\n    const categoryList = [\n        \"All\",\n        \"Coding\",\n        \"Education\",\n        \"Fashion\",\n        \"Food\",\n        \"Health\",\n        \"Love\",\n        \"Money\",\n        \"Music\",\n        \"People\",\n        \"Politics\",\n        \"Science\",\n        \"Sports\",\n        \"Technology\",\n        \"TV\",\n        \"Weather\"\n    ];\n\n    return (\n\n        <nav id=\"categoryNav\" className=\"navbar navbar-expand-lg\">\n            <div className=\"categories\">\n                {categoryList.map((category) => (\n                    <button key={category} onClick={() => getPosts(category)}>{category}</button>\n                ))}\n            </div>\n        </nav>\n\n    ); // End of return()\n\n}; // End of CatButtons()\n\nexport default CatButtons;","import React from 'react';\nimport \"./NavBar.css\"; // Styling\nimport Logo from \"./Logo.json\";\n\nconst NavBar = () => {\n\n  return (\n\n    <nav className=\"navbar navbar-expand-lg\" >\n\n      < div className=\"navBarCoHeader\" >\n        <img id=\"navBarLogoText\" src={Logo[0].imageUrl} alt={Logo[0].name} />\n      </div >\n\n      <div className=\"navBarAppHeader\">\n        <h3 id=\"navBarAppText\">Facilities Management System</h3>\n      </div>\n\n    </nav >\n\n  ); // End of return()\n\n}; // End of NavBar()\n\nexport default NavBar;","import React from \"react\";\n\nconst Wrapper = ({children}) => (\n  <div className=\"container\">\n    {children}\n  </div>\n);\n\nexport default Wrapper;","import React from 'react'\n\nconst Row = ({children}) => (\n  <div className=\"row\">\n    {children}\n  </div>\n);\n\nexport default Row;","import React from 'react'\n\nconst Col = ({children, size, span = 12, offset}) => {\n  let className = size ? `col-${size}-${span}` : `col-${span}`;\n\n  className = offset ? `${className} offset-${offset}` : className;\n\n  return (\n    <div className={className}>\n      {children}\n    </div>\n  );\n}\n\nexport default Col;","import React from \"react\";\nimport { Col, Row } from \"../BootstrapGrid\";\nimport \"./Post.css\"; // User Post CSS\n\nconst formatTimeStamp = (timeStamp) => {\n\n    const dateObj = new Date(timeStamp); // Creates new date object\n    var weekDay = dateObj.getDay(); // Returns day of the week (from 0-6)  \n    var month = dateObj.getMonth(); // Returns month (from 0-11)\n    const day = dateObj.getDate(); // Returns day of the month (from 1-31)\n    const year = dateObj.getFullYear(); // Returns year\n    var hour = dateObj.getHours(); // Returns hour (from 0-23)\n    const minutes = dateObj.getMinutes(); // Returns minutes (from 0-59)\n    var meridian = \"AM\";\n\n    const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n    // Converting numbers to string values\n    weekDay = weekDays[weekDay];\n    month = months[month];\n\n    // Converting from 24 to 12 hour\n    if (hour >= 12) { hour -= 12; meridian = \"PM\"; }\n    if (hour === 0) hour = 12;    \n    \n    const newTimeStamp = `${weekDay} ${day} ${month} ${year} ${hour}:${minutes} ${meridian}`;\n    \n    return newTimeStamp;\n\n}\n\nconst Post = ({ image, name, category, timeStamp, comment, handleDelete, id, userId, user_id }) => {\n\n    const time = formatTimeStamp(timeStamp);\n\n    return (\n\n        <div className=\"postContainer\">\n            <form id={id} onSubmit={handleDelete}>\n                <Row>\n                    {/* Post User Image Column */}\n                    <Col size=\"md\" span=\"2\">\n                        <div className=\"postImgWrapper\">\n                            <img src={image} alt={name} />\n                        </div>\n                    </Col>\n                    {/* Post User Name and Timestamp Column */}\n                    <Col size=\"md\" span=\"6\">\n                        <div className=\"postUserAndTime\">\n                            <div className=\"postUser\">{name}</div>\n                            <div className=\"postTime\">{time}</div>\n                        </div>\n                    </Col>\n                    {/* Post Category\\Delete Button Column */}\n                    <Col size=\"md\" span=\"4\">\n                        <div className=\"postDelBtn\">\n                            {userId === user_id ?\n                                [\n                                    <button key=\"postDelBtn\" id=\"postDelBtn\">✗</button>,\n                                    <div key=\"postCategoryDelBtn\" className=\"postCategoryDelBtn\">{category}</div>\n                                ]\n                                :\n                                <div className=\"postCategory\">{category}</div>\n                            }\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    {/* Post Comment Column */}\n                    <Col size=\"md\">\n\n                        <div className=\"postComment\">{comment}</div>\n                    </Col>\n\n                </Row>\n\n            </form>\n        </div>\n\n    ); // End of return()\n\n}; // End of Post()\n\nexport default Post;","import React from \"react\";\n// import { Col, Row, Wrapper } from \"../BootstrapGrid\";\nimport \"./PostForm.css\"; // Post Form CSS\n\nconst PostForm = ({ addPost, handleInputChange, postBody, postCategory }) => (\n\n    <div id=\"postFormPanel\">\n        <div className=\"panel\">\n            <div id=\"postFormHeader\" className=\"panel-heading\">Share your story...</div>\n            <div id=\"postFormBody\" className=\"panel-body\">\n                <form id=\"postForm\" onSubmit={addPost}>\n                    <div className=\"form-group\">\n                        <textarea name=\"postBody\" value={postBody} onChange={handleInputChange} id=\"postFormBody\" placeholder=\"Write your story here...\" className=\"form-control\" rows=\"10\" required/>\n                    </div>\n                    <div className=\"form-group\">\n                        <select name=\"postCategory\" value={postCategory} onChange={handleInputChange} className=\"custom-select\" id=\"postCategory\">\n\n                            <option value=\"null\" disabled=\"\" defaultValue=\"\">Category...</option>\n                            <option value=\"Coding\">Coding</option>\n                            <option value=\"Education\">Education</option>\n                            <option value=\"Fashion\">Fashion</option>\n                            <option value=\"Food\">Food</option>\n                            <option value=\"Health\">Health</option>\n                            <option value=\"Love\">Love</option>\n                            <option value=\"Money\">Money</option>\n                            <option value=\"Music\">Music</option>\n                            <option value=\"People\">People</option>\n                            <option value=\"Politics\">Politics</option>\n                            <option value=\"Science\">Science</option>\n                            <option value=\"Sports\">Sports</option>\n                            <option value=\"Technology\">Technology</option>\n                            <option value=\"TV\">TV</option>\n                            <option value=\"Weather\">Weather</option>\n\n                        </select>\n                    </div>\n                    <div id=\"postFormBtnWrapper\">\n                        <button id=\"postFormBtn\" type=\"submit\">Share</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n);\n\nexport default PostForm;","import React from \"react\";\n// import { Col, Row, Wrapper } from \"../BootstrapGrid\";\nimport \"./PostForm2.css\"; // Post Form CSS\n\nconst PostForm2 = ({ addPost, handleInputChange, postBody, postCategory }) => (\n\n    <div id=\"postForm2Panel\">\n        <div className=\"panel\">\n            <div id=\"postForm2Header\" className=\"panel-heading\">Share your story...</div>\n            <div id=\"postForm2Body\" className=\"panel-body\">\n                <form id=\"postForm2\" onSubmit={addPost}>\n                    <div className=\"form-group\">\n                        <textarea name=\"postBody\" value={postBody} onChange={handleInputChange} id=\"postForm2Body\" placeholder=\"Write your story here...\" className=\"form-control\" rows=\"3\" required/>\n                    </div>\n                    <div id=\"postForm2CatSelect\" className=\"form-group\">\n                        <select name=\"postCategory\" value={postCategory} onChange={handleInputChange} className=\"custom-select\">\n\n                            <option value=\"null\" disabled=\"\" defaultValue=\"\">Category...</option>\n                            <option value=\"Coding\">Coding</option>\n                            <option value=\"Education\">Education</option>\n                            <option value=\"Fashion\">Fashion</option>\n                            <option value=\"Food\">Food</option>\n                            <option value=\"Health\">Health</option>\n                            <option value=\"Love\">Love</option>\n                            <option value=\"Money\">Money</option>\n                            <option value=\"Music\">Music</option>\n                            <option value=\"People\">People</option>\n                            <option value=\"Politics\">Politics</option>\n                            <option value=\"Science\">Science</option>\n                            <option value=\"Sportst\">Sports</option>\n                            <option value=\"Technology\">Technology</option>\n                            <option value=\"TV\">TV</option>\n                            <option value=\"Weather\">Weather</option>\n\n                        </select>\n                    </div>\n                    <div id=\"postForm2BtnWrapper\">\n                        <button id=\"postForm2Btn\" type=\"submit\">Share</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n);\n\nexport default PostForm2;","import React from \"react\";\n// import { Col, Row, Wrapper } from \"../BootstrapGrid\";\nimport \"./SignUpForm.css\"; // Sign-Up Form CSS\n\nconst SignUpForm = ({\n\n  handleInputChange,\n  handleSignUp,\n  name,\n  email,\n  password,\n  occupation,\n  relationshipType,\n  location,\n  photoUrl,\n  bio\n\n}) => {\n\n  return (\n\n    <div className=\"signUpForm\">\n\n      <form onSubmit={handleSignUp}>\n        <h1 className=\"signUpFormHeader\">Sign Up Form</h1>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input name=\"name\" className=\"form-control\" placeholder=\"Enter your name...\" onChange={handleInputChange} value={name} type=\"name\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">E-mail</label>\n          <input name=\"email\" className=\"form-control\" placeholder=\"Enter your e-mail...\" onChange={handleInputChange} value={email} type=\"email\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input name=\"password\" className=\"form-control\" placeholder=\"Enter a password...\" onChange={handleInputChange} value={password} type=\"password\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"occupation\">Occupation</label>\n          <input name=\"occupation\" className=\"form-control\" placeholder=\"Enter your occupation...\" onChange={handleInputChange} value={occupation} type=\"text\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"relationshipType\">Relationship Type</label>\n          <input name=\"relationshipType\" className=\"form-control\" placeholder=\"What kind of relationship are you looking for?\" onChange={handleInputChange} value={relationshipType} type=\"text\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"location\">Location</label>\n          <select name=\"location\" id=\"location-input\" required className=\"form-control selectpicker\" onChange={handleInputChange} value={location}>\n            <option value=\"null\" disabled=\"\">Location (US State)...</option>\n            <option value=\"Alabama\">Alabama</option>\n            <option value=\"Alaska\">Alaska</option>\n            <option value=\"Arizona\">Arizona</option>\n            <option value=\"Arkansas\">Arkansas</option>\n            <option value=\"California\">California</option>\n            <option value=\"Colorado\">Colorado</option>\n            <option value=\"Connecticut\">Connecticut</option>\n            <option value=\"Delaware\">Delaware</option>\n            <option value=\"Florida\">Florida</option>\n            <option value=\"Georgia\">Georgia</option>\n            <option value=\"Hawaii\">Hawaii</option>\n            <option value=\"Idaho\">Idaho</option>\n            <option value=\"Illinois\">Illinois</option>\n            <option value=\"Indiana\">Indiana</option>\n            <option value=\"Iowa\">Iowa</option>\n            <option value=\"Kansas\">Kansas</option>\n            <option value=\"Kentucky\">Kentucky</option>\n            <option value=\"Lousisana\">Louisiana</option>\n            <option value=\"Maine\">Maine</option>\n            <option value=\"Maryland\">Maryland</option>\n            <option value=\"Massachusetts\">Massachusetts</option>\n            <option value=\"Michigan\">Michigan</option>\n            <option value=\"Minnesota\">Minnesota</option>\n            <option value=\"Mississippi\">Mississippi</option>\n            <option value=\"Missouri\">Missouri</option>\n            <option value=\"Montana\">Montana</option>\n            <option value=\"Nebraska\">Nebraska</option>\n            <option value=\"Nevada\">Nevada</option>\n            <option value=\"New Hamsphire\">New Hampshire</option>\n            <option value=\"New Jersey\">New Jersey</option>\n            <option value=\"New Mexico\">New Mexico</option>\n            <option value=\"New York\">New York</option>\n            <option value=\"North Carolina\">North Carolina</option>\n            <option value=\"North Dakota\">North Dakota</option>\n            <option value=\"Ohio\">Ohio</option>\n            <option value=\"Oklahoma\">Oklahoma</option>\n            <option value=\"Oregon\">Oregon</option>\n            <option value=\"Pennsylvania\">Pennsylvania</option>\n            <option value=\"Rhode Island\">Rhode Island</option>\n            <option value=\"South Carolina\">South Carolina</option>\n            <option value=\"South Dakota\">South Dakota</option>\n            <option value=\"Tennessee\">Tennessee</option>\n            <option value=\"Texas\">Texas</option>\n            <option value=\"Utah\">Utah</option>\n            <option value=\"Vermont\">Vermont</option>\n            <option value=\"Virginia\">Virginia</option>\n            <option value=\"Washington\">Washington</option>\n            <option value=\"West Virginia\">West Virginia</option>\n            <option value=\"Wisconson\">Wisconsin</option>\n            <option value=\"Wyoming\">Wyoming</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"photoUrl\">Profile Picture</label>\n          <input name=\"photoUrl\" className=\"form-control\" placeholder=\"Photo Url...\" onChange={handleInputChange} value={photoUrl} type=\"text\" required />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"bio\">About You</label>\n          <textarea name=\"bio\" id=\"signUpFormTextBox\" className=\"form-control\" placeholder=\"Say something about yourself...\" onChange={handleInputChange} value={bio} type=\"text\" required />\n        </div>\n        <div className=\"signUpFormBtnWrapper\">\n          <button className=\"signUpBtn\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n\n    </div>\n\n  );\n\n};\n\nexport default SignUpForm;","import React from \"react\";\n// import { Col, Row, Wrapper } from \"../BootstrapGrid\";\nimport \"./UserInfo.css\"; // Profile Page User Info CSS\n\nconst UserInfo = ({ image, name, email, occupation, relationshipType, location, bio }) => (\n\n    <div className=\"userDiv\">\n        <div className=\"userTitle\">About Me</div>\n        <br />\n        <div className=\"imgContainer\">\n            <img className=\"userImg\" src={image} alt=\"userprofilephoto\" />\n        </div>\n        <br />\n        <p className=\"userInfo\" > Name: </p> <p className=\"userData\"> {name} </p>\n        <br />\n        <p className=\"userInfo\" > Email: </p> <p className=\"userData\"> {email} </p>\n        <br />\n        <p className=\"userInfo\" > Occupation: </p> <p className=\"userData\">{occupation} </p>\n        <br />\n        <p className=\"userInfo\" > Relationship Type: </p> <p className=\"userData\">{relationshipType}</p>\n        <br />\n        <p className=\"userInfo\" > Location: </p> <p className=\"userData\">{location}</p>\n        <br />\n        <p className=\"userInfo\" > Bio: </p> <p className=\"userData\">{bio}</p>\n\n    </div>\n\n); // End of UserInfo()\n\nexport default UserInfo;","import React from \"react\";\n// import { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport \"./AddNewBldg.css\" // Styling\n\nclass AddNewBldg extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    buildingList: [],\n    name: \"\",\n    location: \"\",\n    states: ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia',\n      'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland',\n      'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\n      'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina',\n      'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\n\n  }\n\n  // Authentication redirect temporarily disabled\n  componentDidMount = () => {\n    //   if (!this.state.loggedIn) {\n    //     // Redirect to \"/\" if user not logged in\n    //     return <Redirect to=\"/\" />\n    this.getBuildingList();\n  }\n\n  duplicateCheck = (name, location) => {\n    let list = this.state.buildingList;\n    for (let i = 0; i < list.length; i++) {\n      if (name === list[i].name && location === list[i].location) {\n        return true;\n      };\n    };\n    return false;\n  }\n\n  getBuildingList = () => {\n    API.getAllBldgs()\n      .then((results) => {\n        console.log(`\\ngetBuildingList() results = ${JSON.stringify(results)}\\n`);\n        this.setState({ buildingList: results.data });\n      });\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleNewBldg = event => {\n    event.preventDefault();\n    let newName = event.target.name.value;\n    const newLocation = event.target.location.value;\n    // Input validation and submission\n    if (newName && newLocation) {\n      newName = this.props.titleCase(newName);\n      let result = this.duplicateCheck(newName, newLocation);\n      if (!result) {\n        API.addNewBldg({\n          name: newName,\n          location: newLocation\n        })\n          .then(() => {\n            this.getBuildingList();\n            alert(\"New building added successfully!\");\n            this.setState({\n              name: \"\",\n              location: \"\"\n            });\n          });\n      }\n      else alert(\"Building already exists! Please use a different name and/or location.\");\n    }\n    else alert(\"All fields required!\");\n  };\n\n  render() {\n\n    // Authentication redirect temporarily disabled\n    // if (!this.state.loggedIn) return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n\n          <Col size=\"md\" span=\"12\">\n            <div>\n              <h3>Building Administration - Add New Building</h3>\n              <hr />\n            </div>\n          </Col>\n\n        </Row>\n\n        <Row>\n\n          <Col size=\"md\" span=\"4\">\n            <div className=\"genFormSettings\">\n              <form onSubmit={this.handleNewBldg}>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Building Name</label>\n                  <input name=\"name\" className=\"form-control\" placeholder=\"Building Name...\" onChange={this.handleInputChange} value={this.state.name} type=\"name\" required />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"location\">Location</label>\n                  <select name=\"location\" id=\"locationInput\" className=\"form-control selectStyling\" onChange={this.handleInputChange} value={this.state.location} type=\"location\" >\n                    <option value=\"\" disabled>Location (US State)...</option>\n                    {\n                      this.state.states.map((stateName) => (\n                        <option key={stateName} value={stateName}>{stateName}</option>\n                      ))\n                    }\n                  </select>\n                </div>\n\n                <div>\n                  <button className=\"genAppBtn\" type=\"submit\">ADD NEW BLDG</button>\n                </div>\n\n              </form>\n            </div>\n          </Col>\n\n          <Col size=\"md\" span=\"8\">\n            <div id=\"buildingDisplayContainer\">\n\n              <div id=\"buildingDisplayHeader\">Buildings</div>\n              <hr id=\"buildingDisplayHr\" />\n\n              <div id=\"buildingDisplay\">\n                {\n                  this.state.buildingList.length === 0 ?\n                    \"* No Buildings Have Been Added\"\n                    :\n                    this.state.buildingList.map((building) => (\n                      <Link\n                        key={building.id}\n                        to={{ pathname: `/buildings/floors/addnewfloor/${building.id}` }}\n                        target=\"_blank\"\n                      >\n                        <button className=\"buildingDisplayBtn\">\n                          {building.name}, {building.location}\n                        </button>\n                      </Link>\n                    ))\n                }\n              </div>\n\n            </div>\n          </Col>\n\n        </Row>\n      </Wrapper >\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of UserAdmin class component\n\nexport default AddNewBldg;","import React from \"react\";\n// import { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport \"./AddNewFloor.css\" // Styling\n\nclass AddNewFloor extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    building: {},\n    buildingId: this.props.params.bldgId,\n    buildingName: \"\",\n    floorList: [],\n    floorName: \"\"\n\n  }\n\n  // Authentication redirect temporarily disabled\n  componentDidMount = () => {\n    //   if (!this.state.loggedIn) {\n    //     // Redirect to \"/\" if user not logged in\n    //     return <Redirect to=\"/\" />\n    this.getActiveBuilding(this.state.buildingId);\n    this.getFloorList(this.state.buildingId);\n  }\n\n  duplicateCheck = (newFloorName) => {\n    let list = this.state.floorList;\n    for (let i = 0; i < list.length; i++) {\n      if (newFloorName === list[i].name) return true;\n    };\n    return false;\n  }\n\n  getActiveBuilding = (bldgId) => {\n    API.getOneBldg(bldgId)\n      .then((results) => {\n        console.log(`\\ngetActiveBuilding() results = ${JSON.stringify(results)}\\n`);\n        this.setState({\n          building: results.data,\n          buildingName: results.data.name\n        });\n      });\n  };\n\n  getFloorList = (bldgId) => {\n    API.getFloorsInBldg(bldgId)\n      .then((results) => {\n        console.log(`\\ngetFloorList() results = ${JSON.stringify(results)}\\n`);\n        this.setState({ floorList: results.data });\n      });\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleNewFloor = event => {\n    event.preventDefault();\n    let newFloorName = event.target.floorName.value;\n    // Input validation and submission\n    if (newFloorName) {\n      newFloorName = this.props.titleCase(newFloorName);\n      let result = this.duplicateCheck(newFloorName);\n      if (!result) {\n        API.addNewFloor({\n          BuildingId: this.state.buildingId,\n          name: newFloorName,\n        })\n          .then(() => {\n            this.getFloorList(this.state.buildingId);\n            alert(\"New floor added successfully!\");\n            this.setState({ floorName: \"\" });\n          });\n      }\n      else alert(\"Floor name already exists! Please use a different name!\");\n    }\n    else alert(\"Floor name required! Please enter a floor name.\");\n  };\n\n  render() {\n\n    // Authentication redirect temporarily disabled\n    // if (!this.state.loggedIn) return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n\n          <Col size=\"md\" span=\"12\">\n            <div>\n              <h3>Building Administration - Add New Floor</h3>\n              <hr />\n            </div>\n          </Col>\n\n        </Row>\n\n        <Row>\n\n          <Col size=\"md\" span=\"4\">\n            <div className=\"genFormSettings\">\n              <form onSubmit={this.handleNewFloor}>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"buildingName\">Building Name</label>\n                  <input name=\"buildingName\" className=\"form-control\" value={this.state.buildingName} type=\"buildingName\" readOnly></input>\n                </div>\n\n                <div className=\"form-group\" style={this.state.showFields}>\n                  <label htmlFor=\"floorName\">Floor Name</label>\n                  <input name=\"floorName\" className=\"form-control\" placeholder=\"Floor Name...\" onChange={this.handleInputChange} value={this.state.floorName} type=\"floorName\" />\n                </div>\n\n                <div>\n                  <button className=\"genAppBtn\" type=\"submit\">ADD NEW FLOOR</button>\n                </div>\n\n              </form>\n            </div>\n          </Col>\n\n          <Col size=\"md\" span=\"8\">\n            <div id=\"floorDisplay\">\n\n              <div id=\"floorDisplayHeader\">\n                {this.state.buildingName} > Floors\n              </div>\n\n              <hr id=\"floorDisplayHr\"/>\n\n              <div id=\"floorData\">\n                {\n                  this.state.floorList.length === 0 ?\n                    \"* No Floors Have Been Added\"\n                    :\n                    this.state.floorList.map((floor) => (\n                      <Link\n                      key={floor.id}\n                      to={{ pathname: `/buildings/floors/rooms/addnewroom/${this.state.buildingId}/${floor.id}` }}\n                      target=\"_blank\"\n                      >\n                      <button className=\"floorDisplayBtn\">{floor.name}</button>\n                      </Link>\n                      ))\n                }\n              </div>\n\n            </div>\n          </Col>\n\n        </Row>\n      </Wrapper >\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of UserAdmin class component\n\nexport default AddNewFloor;","import React from \"react\";\n// import { Redirect } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport \"./AddNewRoom.css\" // Styling\n\nclass AddNewRoom extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    buildingId: this.props.params.bldgId,\n    floor: {},\n    floorId: this.props.params.floorId,\n    floorName: \"\",\n    building: {},\n    buildingName: \"\",\n    roomList: [],\n    roomName: \"\"\n\n  }\n\n  // Authentication redirect temporarily disabled\n  componentDidMount = () => {\n    //   if (!this.state.loggedIn) {\n    //     // Redirect to \"/\" if user not logged in\n    //     return <Redirect to=\"/\" />\n    this.getActiveBuilding(this.state.buildingId);\n    this.getActiveFloor(this.state.floorId);\n    this.getRoomList(this.state.floorId);\n    console.log(`\\nAddNewRooms props = ${JSON.stringify(this.props)}`);\n  };\n\n  duplicateCheck = (newRoomName) => {\n    let list = this.state.roomList;\n    for (let i = 0; i < list.length; i++) {\n      if (newRoomName === list[i].name) return true;\n    };\n    return false;\n  }\n\n  getActiveBuilding = (bldgId) => {\n    API.getOneBldg(bldgId)\n      .then((results) => {\n        console.log(`\\ngetActiveBuilding() results = ${JSON.stringify(results)}\\n`);\n        this.setState({\n          building: results.data,\n          buildingName: results.data.name\n        });\n      });\n  };\n\n  getActiveFloor = (floorId) => {\n    API.getOneFloor(floorId)\n      .then((results) => {\n        console.log(`\\ngetActiveFloor() 'results' = ${JSON.stringify(results)}\\n`);\n        this.setState({\n          floor: results.data,\n          floorName: results.data.name\n        });\n      });\n  };\n\n  getRoomList = (floorId) => {\n    API.getRoomsInFloor(floorId)\n      .then((results) => {\n        console.log(`getRoomsInFloor() results: ${JSON.stringify(results)}`);\n        this.setState({ roomList: results.data });\n      });\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleNewRoom = event => {\n    event.preventDefault();\n    let newRoomName = event.target.roomName.value;\n    // Input validation and submission\n    if (newRoomName) {\n      newRoomName = this.props.titleCase(newRoomName);\n      let result = this.duplicateCheck(newRoomName);\n      if (!result) {\n        API.addNewRoom({\n          FloorId: this.state.floorId,\n          name: newRoomName,\n        })\n          .then(() => {\n            this.getRoomList(this.state.floorId);\n            alert(\"New room added successfully!\");\n            this.setState({ roomName: \"\" });\n          });\n      }\n      else alert(\"Floor name already exists! Please use a different name!\");\n    }\n    else alert(\"Room name required! Please enter a room name.\")\n  };\n\n  render() {\n\n    // Authentication redirect temporarily disabled\n    // if (!this.state.loggedIn) return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n\n          <Col size=\"md\" span=\"12\">\n            <div>\n              <h3>Building Administration - Add New Room</h3>\n              <hr />\n            </div>\n          </Col>\n\n        </Row>\n\n        <Row>\n\n          <Col size=\"md\" span=\"4\">\n            <div className=\"genFormSettings\">\n              <form onSubmit={this.handleNewRoom}>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"buildingName\">Building Name</label>\n                  <input name=\"buildingName\" className=\"form-control\" value={this.state.buildingName} type=\"buildingName\" readOnly></input>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"floorName\">Floor Name</label>\n                  <input name=\"floorName\" className=\"form-control\" value={this.state.floorName} type=\"floorName\" readOnly></input>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"roomName\">Room Name</label>\n                  <input name=\"roomName\" className=\"form-control\" placeholder=\"Room Name...\" onChange={this.handleInputChange} value={this.state.roomName} type=\"roomName\" />\n                </div>\n\n                <div>\n                  <button className=\"genAppBtn\" type=\"submit\">ADD NEW ROOM</button>\n                </div>\n\n              </form>\n            </div>\n          </Col>\n\n          <Col size=\"md\" span=\"8\">\n            <div id=\"roomDisplay\">\n\n              <div id=\"roomDisplayHeader\">\n                {this.state.buildingName} > Floor: {this.state.floorName} > Rooms\n              </div>\n\n              <hr id=\"roomDisplayHr\" />\n\n              <div id=\"roomData\">\n                {\n                  this.state.roomList.length === 0 ?\n                    \"* No Rooms Have Been Added\"\n                    :\n                    this.state.roomList.map((room) => (\n                      <button key={room.id} className=\"roomDisplayBtn\">{room.name}</button>\n                    ))\n                }\n              </div>\n\n            </div>\n          </Col>\n\n        </Row>\n      </Wrapper >\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of UserAdmin class component\n\nexport default AddNewRoom;","import React from \"react\";\n// import { Redirect } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\n\nclass AddNewUser extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n\n    name: \"\",\n    title: \"\",\n    userImageUrl: \"\",\n    email: \"\",\n    password: \"\"\n\n  }\n\n  // Re-enable once all pages/components are completed\n  // componentDidMount = () => {\n  //   if (!this.state.loggedIn) {\n  //     // Redirect to \"/\" if user not logged in\n  //     return <Redirect to=\"/\" />\n  // }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  };\n\n  handleNewUser = event => {\n    event.preventDefault();\n    const newName = event.target.name.value;\n    const newTitle = event.target.title.value;\n    const newUserImageUrl = event.target.userImageUrl.value;\n    const newEmail = event.target.email.value;\n    const newPassword = event.target.password.value;\n\n    // Input validation\n    if (newName && newTitle && newUserImageUrl && newEmail && newPassword) {\n      API.addNewUser({\n        name: newName,\n        title: newTitle,\n        userImageUrl: newUserImageUrl,\n        email: newEmail,\n        password: newPassword\n      })\n        .then(() => {\n          alert(\"New user added successfully!\");\n          this.setState({\n            name: \"\",\n            title: \"\",\n            userImageUrl: \"\",\n            email: \"\",\n            password: \"\"\n          });\n        });\n    }\n    else alert(\"All fields required!\");\n  };\n\n  render() {\n\n    // Re-enable once all components/pages are completed\n    // if (!this.state.loggedIn) return <Redirect to=\"/\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n          <Col size=\"md\" span=\"12\">\n            <div>\n              <h3>User Administration - Add New User</h3>\n              <hr></hr>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md\" span=\"4\">\n            <div className=\"genFormSettings\">\n              <form onSubmit={this.handleNewUser}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name</label>\n                  <input name=\"name\" className=\"form-control\" placeholder=\"Name...\" onChange={this.handleInputChange} value={this.state.name} type=\"name\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Title</label>\n                  <input name=\"title\" className=\"form-control\" placeholder=\"Title...\" onChange={this.handleInputChange} value={this.state.title} type=\"title\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"userImageUrl\">Profile Image Url</label>\n                  <input name=\"userImageUrl\" className=\"form-control\" placeholder=\"Profile Image Url...\" onChange={this.handleInputChange} value={this.state.userImageUrl} type=\"userImageUrl\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">E-mail</label>\n                  <input name=\"email\" className=\"form-control\" placeholder=\"Email...\" onChange={this.handleInputChange} value={this.state.email} type=\"email\" required />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input name=\"password\" className=\"form-control\" placeholder=\"Password...\" onChange={this.handleInputChange} value={this.state.password} type=\"password\" required />\n                </div>\n                <div>\n                  <button className=\"genAppBtn\" type=\"submit\">ADD NEW USER</button>\n                </div>\n              </form>\n            </div>\n          </Col>\n          <Col size=\"md\" span=\"4\"></Col>\n          <Col size=\"md\" span=\"2\"></Col>\n        </Row>\n      </Wrapper>\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of UserAdmin class component\n\nexport default AddNewUser;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport API from \"../../utils/API\";\nimport \"./Login.css\"; // Styling\n\nclass Login extends React.Component {\n\n  state = {\n    email: \"\",\n    password: \"\",\n    redirectTo: \"\"\n  }\n\n  // Set 'redirectTo' to '/feed' if user logged in\n  componentWillMount = () => {\n    if (this.props.loggedIn) {\n      this.setState({ redirectTo: \"/feed\" });\n    }\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  };\n\n  handleLogin = event => {\n    event.preventDefault();\n    API.login({ email: this.state.email, password: this.state.password })\n      .then((res) => {\n        this.props.setUser(res.data.user)\n        this.setState({\n          // Set 'redirectTo' to '/feed' if user logged in\n          redirectTo: \"/feed\"\n        });\n      });\n  }\n\n  render() {\n\n    // Redirect to /feed if user logged in\n    if (this.state.redirectTo) {\n      return <Redirect to={this.state.redirectTo} />\n    }\n\n    return (\n\n      <Wrapper>\n        <Row>\n          <Col size=\"md\" span=\"4\"></Col>\n          <Col size=\"md\" span=\"4\">\n            <div>\n              <h3 id=\"loginFormHeader\">Welcome to AMS</h3>\n              <form onSubmit={this.handleLogin}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input name=\"email\" className=\"form-control\" type=\"text\" value={this.state.email} onChange={this.handleInputChange} />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input name=\"password\" className=\"form-control\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} />\n                </div>\n                <button className=\"loginBtn genAppBtn\" type=\"submit\">LOGIN</button>\n              </form>\n            </div>\n          </Col>\n          <Col size=\"md\" span=\"4\"></Col>\n        </Row>\n      </Wrapper>\n\n    ); // End of Return\n\n  }; // End of render()\n\n}; // End of Class Login Component\n\nexport default Login;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport CatButtons from \"../../components/CatButtons\";\nimport Post from \"../../components/Post\";\nimport PostForm from \"../../components/PostForm\";\nimport \"./Feed.css\"; // Feed Page CSS\n\nclass Feed extends React.Component {\n\n    state = {\n        loggedIn: this.props.loggedIn,\n        user: this.props.user,\n        postBody: \"\",\n        postCategory: \"\",\n        posts: [],\n    };\n\n    addPost = (event) => {\n        event.preventDefault();\n        // Post Form Validation\n        const categoryInput = event.target.postCategory.value;\n        if (categoryInput !== \"null\") {\n            API.createPost({\n                body: event.target.postBody.value,\n                category: event.target.postCategory.value\n            })\n                .then((res) => {\n                    // Clear post form values\n                    this.setState({\n                        postBody: \"\",\n                        postCategory: \"\"\n                    });\n                    this.getAllPosts();\n                });\n        }\n        else alert(\"Category field required!\");\n    };\n\n    componentDidMount = () => {\n        if (!this.state.loggedIn) {\n            // Redirect to \"/\" if user not logged in\n            return <Redirect to=\"/\" />\n        }\n        this.getAllPosts();\n    };\n\n    getAllPosts = () => {\n        API.getAllPosts()\n            .then((res) => {\n                this.setState({\n                    posts: res.data\n                })\n            });\n    }\n\n    getPostsByCategory = (category) => {\n        if (category !== \"All\") {\n            API.getPostsByCat(category)\n                .then((res) => {\n                    if (res.data.length > 0) this.setState({ posts: res.data });\n                    else this.setState({ posts: [] });\n                });\n        } else {\n            this.getAllPosts();\n        }\n    }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n        API.deletePost(event.target.id)\n            .then((res) => {\n                this.getAllPosts();\n            });\n    }\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    render() {\n\n        // Redirect to \"/\" if not logged in\n        if (!this.state.loggedIn) {\n            return <Redirect to=\"/\" />\n        }\n\n        // let user_id = this.props.user? this.props.user.id:\"\";\n        let loggedOnUserId = this.state.user.id;\n\n        return (\n\n            <div className=\"feedContainer\">\n                <CatButtons getPosts={this.getPostsByCategory} />\n                <Wrapper>\n                    <Row>\n                        {/* Feed header */}\n                        <Col size=\"md\">\n                            {!this.state.posts.length ?\n                                <p className=\"feedHeader\">No Stories...</p>\n                                :\n                                <p key=\"feedHeader\" className=\"feedHeader\">Stories...</p>\n                            }\n                        </Col>\n                    </Row>\n                    <Row>\n                        {/* Feed column */}\n                        <Col size=\"md\" span=\"8\">\n                            {!this.state.posts.length ?\n                                \"\"\n                                :\n                                (\n                                    this.state.posts.map((post) => {\n                                        return (\n                                            <Post\n                                                key={post.id}\n                                                id={post.id}\n                                                category={post.category}\n                                                comment={post.body}\n                                                image={post.User.imageUrl}\n                                                name={post.User.name}\n                                                timeStamp={post.updatedAt}\n                                                handleDelete={this.handleDelete}\n                                                userId={post.UserId}\n                                                user_id={loggedOnUserId}\n                                            />\n                                        );\n                                    }, this)\n                                )\n                            };\n\n                        </Col>\n                        {/* Post form column */}\n                        <Col size=\"md\" span=\"4\">\n                            <PostForm\n                                addPost={this.addPost}\n                                handleInputChange={this.handleInputChange}\n                                postBody={this.state.postBody}\n                                postCategory={this.state.postCategory}\n                            />\n                        </Col>\n                    </Row>\n                </Wrapper>\n            </div>\n\n        ); // End of return()\n\n    }; // End of render()\n\n}; // End of Feed()\n\nexport default Feed;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport SignUpForm from \"../../components/SignUpForm\";\nimport \"./Home.css\"; // Home Page CSS\n\nclass Home extends React.Component {\n\n  state = {\n\n    loggedIn: this.props.loggedIn,\n    user: this.props.user,\n    redirectTo: \"\",\n\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    occupation: \"\",\n    relationshipType: \"\",\n    location: \"\",\n    photoUrl: \"\",\n    bio: \"\"\n\n  }\n\n  componentDidMount = () => {\n    if (this.state.loggedIn) return <Redirect to=\"/feed\" />\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  };\n\n  handleSignUp = event => {\n    event.preventDefault();\n    // Location input validation\n    const locationInput = event.target.location.value;\n    if (locationInput !== \"null\") {\n      API.signUp({\n        name: event.target.name.value,\n        email: event.target.email.value,\n        password: event.target.password.value,\n        occupation: event.target.occupation.value,\n        relationshipType: event.target.relationshipType.value,\n        location: event.target.location.value,\n        imageUrl: event.target.photoUrl.value,\n        bio: event.target.bio.value\n      })\n        .then(() => this.setState({\n          redirectTo: \"/login\"\n        }));\n    }\n     else alert(\"Location field required!\");\n  };\n\n  render() {\n\n    if (this.state.redirectTo) return <Redirect to={this.state.redirectTo} />\n    if (this.state.loggedIn) return <Redirect to=\"/feed\" />\n\n    return (\n\n      <Wrapper>\n        <Row>\n          <Col size=\"md\" span=\"3\"></Col>\n          <Col size=\"md\" span=\"6\">\n            <SignUpForm\n              handleInputChange={this.handleInputChange}\n              handleSignUp={this.handleSignUp}\n              name={this.state.name}\n              email={this.state.email}\n              password={this.state.password}\n              occupation={this.state.occupation}\n              relationshipType={this.state.relationshipType}\n              location={this.state.location}\n              photoUrl={this.state.photoUrl}\n              bio={this.state.bio}\n            />\n          </Col>\n          <Col size=\"md\" span=\"3\"></Col>\n        </Row>\n      </Wrapper>\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of home.js class component\n\nexport default Home;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport API from \"./utils/API\";\nimport { NavBar } from \"./components\";\nimport { AddNewBldg, AddNewFloor, AddNewRoom, AddNewUser, Login } from \"./pages\"\nimport \"./App.css\"; // Styling\n\nclass App extends React.Component {\n\n  state = {\n\n    loading: \"initial\",\n    loggedIn: false,\n    user: null,\n\n  }\n\n  componentDidMount() {\n\n    // Authentication temporarily disabled\n    this.setState({ loading: \"false\" });\n\n    // Authentication Temporarily disabled\n    // this.setState({ loading: \"true\" });\n    // API.getLoggedOnUser()\n    //   .then(res => {\n    //     if (res.data.user) {\n    //       this.setState({\n    //         loading: \"false\",\n    //         loggedIn: true,\n    //         user: res.data.user\n    //       });\n    //     }\n    //     else {\n    //       this.setState({\n    //         loading: \"false\",\n    //         loggedIn: false,\n    //         user: null\n    //       });\n    //     };\n    //   });\n\n  }\n\n  handleLogout = () => {\n    API.logout()\n      .then(() => {\n        // Move setState outside callback?\n        this.setState({\n          user: null,\n          loggedIn: false\n        });\n        // Add a redirect to login page here\n      });\n  };\n\n  setUser = (user) => {\n    this.setState({\n      user,\n      loggedIn: true\n    });\n  };\n\n  titleCase = (str) => {\n    return str.toLowerCase()\n      .split(' ')\n      .map(function (word) {\n        return word.replace(word[0], word[0].toUpperCase());\n      })\n      .join(' ');\n  }\n\n  render() {\n\n    // Prevents rendering until component mounts && loading === false\n    if (this.state.loading === 'initial') {\n      return <h2>Intializing...</h2>;\n    }\n\n    // Prevents rendering until component mounts && loading === false\n    if (this.state.loading === 'true') {\n      return <h2>Loading...</h2>;\n    }\n\n    return (\n\n      <Router>\n\n        <div>\n          <NavBar></NavBar>\n          {/* <NavBar loggedIn={this.state.loggedIn} logout={this.handleLogout} /> */}\n          {/* <Route exact path=\"/\" render={() => <Login setUser={this.setUser} loggedIn={this.state.loggedIn} user={this.state.user} />} /> */}\n          <Route exact path=\"/\"\n            render={() =>\n              <Login\n                loggedIn={this.state.loggedIn}\n                user={this.state.user}\n              />}\n          />\n          <Route exact path=\"/buildings/addnewbldg\"\n            render={() =>\n              <AddNewBldg\n                loggedIn={this.state.loggedIn}\n                user={this.state.user}\n                titleCase={this.titleCase}\n              />}\n          />\n          <Route exact path=\"/buildings/floors/addnewfloor/:bldgId\"\n            render={({ match }) =>\n              <AddNewFloor\n                loggedIn={this.state.loggedIn}\n                user={this.state.user}\n                params={match.params}\n                titleCase={this.titleCase}\n              />}\n          />\n          <Route exact path=\"/buildings/floors/rooms/addnewroom/:bldgId/:floorId\"\n            render={({ match }) =>\n              <AddNewRoom\n                loggedIn={this.state.loggedIn}\n                user={this.state.user}\n                params={match.params}\n                titleCase={this.titleCase}\n              />}\n          />\n          <Route exact path=\"/users/addnewuser\"\n            render={() =>\n              <AddNewUser\n                loggedIn={this.state.loggedIn}\n                user={this.state.user}\n              />}\n          />\n          <Route exact path=\"/login\"\n            render={() =>\n              <Login\n                setUser={this.setUser}\n                loggedIn={this.state.loggedIn}\n                user={this.state.user}\n              />}\n          />\n          {/* NEED TO ADD A CATCH ALL ROUTE FOR PAGES NOT FOUND */}\n        </div>\n\n      </Router>\n\n    ); // End of return()\n\n  }; // End of render()\n\n}; // End of App.js class component\n\nexport default App;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Wrapper } from \"../../components/BootstrapGrid\";\nimport CatButtons from \"../../components/CatButtons\";\nimport Post from \"../../components/Post\";\nimport PostForm2 from \"../../components/PostForm2\"\nimport UserInfo from \"../../components/UserInfo\";\nimport \"./Profile.css\"; // Profile Page CSS\n\nclass Profile extends React.Component {\n\n    state = {\n        loggedIn: this.props.loggedIn,\n        user: this.props.user,\n        postBody: \"\",\n        postCategory: \"\",\n        posts: []\n    };\n\n    addPost = (event) => {\n        event.preventDefault();\n        // Post Form Validation\n        const categoryInput = event.target.postCategory.value;\n        if (categoryInput !== \"null\") {\n            API.createPost({\n                body: event.target.postBody.value,\n                category: event.target.postCategory.value\n            })\n                .then((res) => {\n                    // Clear post form values\n                    this.setState({\n                        postBody: \"\",\n                        postCategory: \"\"\n                    });\n                    this.getUserPosts();\n                });\n        }\n        else alert(\"Category field required!\");\n    };\n\n    componentDidMount = () => {\n        if (!this.state.loggedIn) {\n            // Redirect to \"/\" if user NOT logged in\n            return <Redirect to=\"/\" />\n        }\n        this.getUserPosts();\n    };\n\n    getUserPostsByCategory = (category) => {\n        const userId = this.state.user.id;\n        if (category !== \"All\") {\n            API.getPostsByCat(category, userId)\n                .then((res) => {\n                    if (res.data.length > 0) this.setState({ posts: res.data });\n                    else this.setState({ posts: [] });\n                });\n        }\n        else this.getUserPosts();\n    };\n\n    getUserPosts = () => {\n        const userId = this.state.user.id;\n        API.getPostsByUser(userId)\n            .then((res) => {\n                if (res.data.length > 0) this.setState({ posts: res.data });\n                else this.setState({ posts: [] });\n            });\n    };\n\n    handleDelete = (event) => {\n        event.preventDefault();\n        API.deletePost(event.target.id)\n            .then((res) => {\n                this.getUserPosts();\n            });\n    }\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    render() {\n\n        // Redirect to \"/\" if user NOT logged in\n        if (!this.state.loggedIn) {\n            return <Redirect to=\"/\" />\n        }\n\n        // Destructuring logged on user\n        let { bio, email, id, imageUrl, location, name, occupation, relationshipType } = this.state.user;\n\n        return (\n\n            <div className=\"profileContainer\">\n                <CatButtons getPosts={this.getUserPostsByCategory} />\n                <Wrapper>\n                    <Row>\n\n                        {/* User Profile Column */}\n                        <Col size=\"md\" span=\"4\">\n                            <div className=\"userInfoContainer\">\n                                <UserInfo\n                                    bio={bio}\n                                    email={email}\n                                    image={imageUrl}\n                                    location={location}\n                                    name={name}\n                                    occupation={occupation}\n                                    relationshipType={relationshipType}\n                                />\n                            </div>\n                        </Col>\n\n                        {/* User Feed/Post Form Column */}\n                        <Col size=\"md\" span=\"8\">\n                            {!this.state.posts.length ?\n                                <p className=\"feedHeader\">No Stories...</p>\n                                :\n                                <p key=\"feedHeader\" className=\"feedHeader\">Your Stories...</p>\n                            }\n                            <div className=\"userPostForm\">\n                                <PostForm2\n                                    addPost={this.addPost}\n                                    handleInputChange={this.handleInputChange}\n                                    postBody={this.state.postBody}\n                                    postCategory={this.state.postCategory}\n                                />\n                            </div>\n                            <div className=\"userFeedContainer\">\n                                {!this.state.posts.length ?\n                                    \"\"\n                                    :\n                                    (\n                                        this.state.posts.map(function (post) {\n                                            return (\n                                                <Post\n                                                    key={post.id}\n                                                    id={post.id}\n                                                    category={post.category}\n                                                    comment={post.body}\n                                                    handleDelete={this.handleDelete}\n                                                    image={imageUrl}\n                                                    name={name}\n                                                    timeStamp={post.updatedAt}\n                                                    userId={post.UserId}\n                                                    user_id={id}\n                                                />\n                                            );\n                                        }, this)\n                                    )\n                                };\n                            </div>\n                        </Col>\n\n                    </Row>\n                </Wrapper>\n            </div>\n\n        ); // End of return()\n\n    }; // End of render()\n\n}; // End of class Profile\n\nexport default Profile;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}